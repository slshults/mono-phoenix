import Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.

# Configure your database
config :mono_phoenix_v01, MonoPhoenixV01.Repo,
  username: "zkhvmkgqvfbeyx",
  password: "***REMOVED***",
  hostname: "ec2-44-196-223-128.compute-1.amazonaws.com",
  database: "d6d0qn3kc71hi0",
  port: 5432,
  ssl_opts: [verify: :verify_none, certfile: 'priv/selfsigned.pem'],
  pool_size: 18

config :mono_phoenix_v01, MonoPhoenixV01Web.Endpoint,
  http: [port: {:system, "80"}],
  url: [host: "mono-phoenix.herokuapp.com"],
  # cache_static_manifest: "priv/static/cache_manifest.json",
  https: [
    port: 443,
    cipher_suite: :compatible,
    otp_app: :mono_phoenix_v01,
    keyfile: System.get_env("priv/selfsigned_key.pem"),
    certfile: System.get_env("priv/selfsigned.pem")
    # OPTIONAL Key for intermediate certificates:
    # cacertfile: System.get_env("SOME_APP_SSL_CACERT_PATH")
  ]

config :mono_phoenix_v01, MonoPhoenixV01Web.Endpoint,
  force_ssl: [rewrite_on: [:x_forwarded_proto]]

# config :mono_phoenix_v01, MonoPhoenixV01Web.Endpoint,
# url: [host: "mono-phoenix.herokuapp.com", port: 80],
#  cache_static_manifest: "priv/static/cache_manifest.json"

# Do not print debug messages in production
config :logger, level: :info

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :mono_phoenix_v01, MonoPhoenixV01Web.Endpoint,
#       ...,
#       url: [host: "example.com", port: 443],
#       https: [
#         ...,
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH")
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :mono_phoenix_v01, MonoPhoenixV01Web.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.
