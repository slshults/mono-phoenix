{"version":3,"file":"surveys-module-previews.js","sources":["../src/posthog-surveys-types.ts","../src/utils/globals.ts","../node_modules/.pnpm/preact@10.19.3/node_modules/preact/dist/preact.module.js","../src/extensions/surveys/surveys-utils.tsx","../node_modules/.pnpm/preact-render-to-string@6.3.1_preact@10.19.3/node_modules/preact-render-to-string/dist/index.module.js","../node_modules/.pnpm/preact@10.19.3/node_modules/preact/hooks/dist/hooks.module.js","../src/utils/type-utils.ts","../src/extensions/surveys/icons.tsx","../src/extensions/surveys/components/PostHogLogo.tsx","../src/extensions/surveys/components/BottomSection.tsx","../src/extensions/surveys/components/QuestionHeader.tsx","../src/extensions/surveys/components/ConfirmationMessage.tsx","../src/extensions/surveys/hooks/useContrastingTextColor.ts","../src/extensions/surveys/components/QuestionTypes.tsx","../src/extensions/surveys.tsx","../src/extensions/surveys-widget.ts"],"sourcesContent":["/**\n * Having Survey types in types.ts was confusing tsc\n * and generating an invalid module.d.ts\n * See https://github.com/PostHog/posthog-js/issues/698\n */\n\nexport interface SurveyAppearance {\n    // keep in sync with frontend/src/types.ts -> SurveyAppearance\n    backgroundColor?: string\n    submitButtonColor?: string\n    // text color is deprecated, use auto contrast text color instead\n    textColor?: string\n    // deprecate submit button text eventually\n    submitButtonText?: string\n    descriptionTextColor?: string\n    ratingButtonColor?: string\n    ratingButtonActiveColor?: string\n    ratingButtonHoverColor?: string\n    whiteLabel?: boolean\n    autoDisappear?: boolean\n    displayThankYouMessage?: boolean\n    thankYouMessageHeader?: string\n    thankYouMessageDescription?: string\n    borderColor?: string\n    position?: 'left' | 'right' | 'center'\n    placeholder?: string\n    // widget options\n    widgetType?: 'button' | 'tab' | 'selector'\n    widgetSelector?: string\n    widgetLabel?: string\n    widgetColor?: string\n    // questionable: Not in frontend/src/types.ts -> SurveyAppearance, but used in site app\n    maxWidth?: string\n    zIndex?: string\n}\n\nexport enum SurveyType {\n    Popover = 'popover',\n    API = 'api',\n    Widget = 'widget',\n}\n\nexport type SurveyQuestion = BasicSurveyQuestion | LinkSurveyQuestion | RatingSurveyQuestion | MultipleSurveyQuestion\n\ninterface SurveyQuestionBase {\n    question: string\n    description?: string | null\n    optional?: boolean\n    buttonText?: string\n}\n\nexport interface BasicSurveyQuestion extends SurveyQuestionBase {\n    type: SurveyQuestionType.Open\n}\n\nexport interface LinkSurveyQuestion extends SurveyQuestionBase {\n    type: SurveyQuestionType.Link\n    link?: string | null\n}\n\nexport interface RatingSurveyQuestion extends SurveyQuestionBase {\n    type: SurveyQuestionType.Rating\n    display: 'number' | 'emoji'\n    scale: number\n    lowerBoundLabel: string\n    upperBoundLabel: string\n}\n\nexport interface MultipleSurveyQuestion extends SurveyQuestionBase {\n    type: SurveyQuestionType.SingleChoice | SurveyQuestionType.MultipleChoice\n    choices: string[]\n    hasOpenChoice?: boolean\n}\n\nexport enum SurveyQuestionType {\n    Open = 'open',\n    MultipleChoice = 'multiple_choice',\n    SingleChoice = 'single_choice',\n    Rating = 'rating',\n    Link = 'link',\n}\n\nexport interface SurveyResponse {\n    surveys: Survey[]\n}\n\nexport type SurveyCallback = (surveys: Survey[]) => void\n\nexport type SurveyUrlMatchType = 'regex' | 'exact' | 'icontains'\n\nexport interface Survey {\n    // Sync this with the backend's SurveyAPISerializer!\n    id: string\n    name: string\n    description: string\n    type: SurveyType\n    linked_flag_key: string | null\n    targeting_flag_key: string | null\n    questions: SurveyQuestion[]\n    appearance: SurveyAppearance | null\n    conditions: {\n        url?: string\n        selector?: string\n        seenSurveyWaitPeriodInDays?: number\n        urlMatchType?: SurveyUrlMatchType\n    } | null\n    start_date: string | null\n    end_date: string | null\n}\n","/*\n * Global helpers to protect access to browser globals in a way that is safer for different targets\n * like DOM, SSR, Web workers etc.\n *\n * NOTE: Typically we want the \"window\" but globalThis works for both the typical browser context as\n * well as other contexts such as the web worker context. Window is still exported for any bits that explicitly require it.\n * If in doubt - export the global you need from this file and use that as an optional value. This way the code path is forced\n * to handle the case where the global is not available.\n */\n\n// eslint-disable-next-line no-restricted-globals\nconst win: (Window & typeof globalThis) | undefined = typeof window !== 'undefined' ? window : undefined\n\nconst global: typeof globalThis | undefined = typeof globalThis !== 'undefined' ? globalThis : win\n\nexport const ArrayProto = Array.prototype\nexport const nativeForEach = ArrayProto.forEach\nexport const nativeIndexOf = ArrayProto.indexOf\n\nconst navigator = global?.navigator\nexport const document = global?.document\nexport const location = global?.location\nexport const fetch = global?.fetch\nexport const XMLHttpRequest =\n    global?.XMLHttpRequest && 'withCredentials' in new global.XMLHttpRequest() ? global.XMLHttpRequest : undefined\nexport const AbortController = global?.AbortController\nexport const userAgent = navigator?.userAgent\nexport const assignableWindow: Window & typeof globalThis & Record<string, any> = win ?? ({} as any)\n\nexport { win as window }\n","var n,l,u,t,i,o,r,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h=Array.isArray;function v(n,l){for(var u in l)n[u]=l[u];return n}function p(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d(l,f,i,o,null)}function d(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function _(){return{current:null}}function g(n){return n.children}function b(n,l){this.props=n,this.context=l}function m(n,l){if(null==l)return n.__?m(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?m(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function w(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!x.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(x)}function x(){var n,u,t,o,r,e,c,s,a;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,s=[],a=[],(c=t.__P)&&((o=v({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),L(c,o,r,t.__n,void 0!==c.ownerSVGElement,32&r.__u?[e]:null,s,null==e?m(r):e,!!(32&r.__u),a),o.__.__k[o.__i]=o,M(s,o,a),o.__e!=e&&k(o)),i.length>u&&i.sort(f));x.__r=0}function C(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s,b=l.length;for(u.__d=e,P(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c:g[y.__i]||c,y.__i=v,L(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&z(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=S(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_}function P(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d(null,i,null,null,i):h(i)?d(g,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=H(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m(o)),N(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m(o)),N(o,o))}function S(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=S(t[i],l,u));return l}return n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e),l&&l.nextSibling}function $(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(h(n)?n.some(function(n){$(n,l)}):l.push(n)),l}function H(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function I(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function T(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||I(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||I(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?D:A,o)):n.removeEventListener(l,o?D:A,o);else{if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u))}}function A(n){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l.event?l.event(n):n)}function D(n){return this.l[n.type+!0](l.event?l.event(n):n)}function L(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,k,w,x,P,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof A)try{if(w=u.props,x=(a=A.contextType)&&i[a.__c],P=a?x?x.props.value:a.__:i,t.__c?k=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(w,P):(u.__c=p=new b(w,P),p.constructor=A,p.render=O),x&&x.sub(p),p.props=w,p.state||(p.state={}),p.context=P,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v({},p.__s)),v(p.__s,A.getDerivedStateFromProps(w,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else{if(null==A.getDerivedStateFromProps&&w!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(w,P),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(w,p.__s,P)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=w,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(w,p.__s,P),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m)})}if(p.context=P,p.props=w,p.__P=n,p.__e=!1,$=l.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[]}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v(v({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),C(n,h(T=null!=a&&a.type===g&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),k&&(p.__E=p.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=j(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function M(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)z(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function j(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,k=t.props,w=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(w);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,w.is&&w),r=null,e=!1}if(null===x)k===w||e&&l.data===w||(l.data=w);else{if(r=r&&n.call(l.childNodes),k=t.props||c,!e&&null!=r)for(k={},a=0;a<l.attributes.length;a++)k[(_=l.attributes[a]).name]=_.value;for(a in k)_=k[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in w||T(l,a,null,_,o));for(a in w)_=w[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||k[a]===_||T(l,a,_,k[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),C(l,h(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==k[a])&&T(l,a,g,k[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&T(l,a,b,k[a],!1))}return l}function z(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function N(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||z(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null,n.__c=void 0}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&N(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function q(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],L(t,u=(!o&&i||t).__k=y(g,null,[u]),r||c,c,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),M(f,u,e)}function B(n,l){q(n,l,B)}function E(l,u,t){var i,o,r,f,e=v({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),d(l.type,e,i||l.key,o||l.ref,null)}function F(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,w(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v({},this.state),\"function\"==typeof n&&(n=n(v({},u),this.props)),n&&v(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),w(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),w(this))},b.prototype.render=g,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},x.__r=0,e=0;export{b as Component,g as Fragment,E as cloneElement,F as createContext,y as createElement,_ as createRef,y as h,B as hydrate,t as isValidElement,l as options,q as render,$ as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import { PostHog } from '../../posthog-core'\nimport { Survey, SurveyAppearance } from '../../posthog-surveys-types'\nimport { window as _window, document as _document } from '../../utils/globals'\nimport { createContext } from 'preact'\n// We cast the types here which is dangerous but protected by the top level generateSurveys call\nconst window = _window as Window & typeof globalThis\nconst document = _document as Document\n\nexport const style = (appearance: SurveyAppearance | null) => {\n    const positions = {\n        left: 'left: 30px;',\n        right: 'right: 30px;',\n        center: `\n            left: 50%;\n            transform: translateX(-50%);\n          `,\n    }\n    return `\n          .survey-form {\n              position: fixed;\n              margin: 0px;\n              bottom: 0px;\n              color: black;\n              font-weight: normal;\n              font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n              text-align: left;\n              max-width: ${parseInt(appearance?.maxWidth || '300')}px;\n              z-index: ${parseInt(appearance?.zIndex || '99999')};\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n              border-bottom: 0px;\n              width: 100%;\n              ${positions[appearance?.position || 'right'] || 'right: 30px;'}\n          }\n          .form-submit[disabled] {\n              opacity: 0.6;\n              filter: grayscale(50%);\n              cursor: not-allowed;\n          }\n          .survey-form {\n              flex-direction: column;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              border-top-left-radius: 10px;\n              border-top-right-radius: 10px;\n              box-shadow: -6px 0 16px -8px rgb(0 0 0 / 8%), -9px 0 28px 0 rgb(0 0 0 / 5%), -12px 0 48px 16px rgb(0 0 0 / 3%);\n          }\n          .survey-form textarea {\n              color: #2d2d2d;\n              font-size: 14px;\n              font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n              background: white;\n              color: black;\n              outline: none;\n              padding-left: 10px;\n              padding-right: 10px;\n              padding-top: 10px;\n              border-radius: 6px;\n              border-color: ${appearance?.borderColor || '#c9c6c6'};\n              margin-top: 14px;\n          }\n          .form-submit {\n              box-sizing: border-box;\n              margin: 0;\n              font-family: inherit;\n              overflow: visible;\n              text-transform: none;\n              position: relative;\n              display: inline-block;\n              font-weight: 700;\n              white-space: nowrap;\n              text-align: center;\n              border: 1.5px solid transparent;\n              cursor: pointer;\n              user-select: none;\n              touch-action: manipulation;\n              padding: 12px;\n              font-size: 14px;\n              border-radius: 6px;\n              outline: 0;\n              background: ${appearance?.submitButtonColor || 'black'} !important;\n              text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n              box-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);\n              width: 100%;\n          }\n          .form-cancel {\n              float: right;\n              border: none;\n              background: none;\n              cursor: pointer;\n          }\n          .cancel-btn-wrapper {\n              position: absolute;\n              width: 35px;\n              height: 35px;\n              border-radius: 100%;\n              top: 0;\n              right: 0;\n              transform: translate(50%, -50%);\n              background: white;\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n              display: flex;\n              justify-content: center;\n              align-items: center;\n          }\n          .bolded { font-weight: 600; }\n          .buttons {\n              display: flex;\n              justify-content: center;\n          }\n          .footer-branding {\n              font-size: 11px;\n              margin-top: 10px;\n              text-align: center;\n              display: flex;\n              justify-content: center;\n              gap: 4px;\n              align-items: center;\n              font-weight: 500;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              text-decoration: none;\n          }\n          .survey-box {\n              padding: 20px 25px 10px;\n              display: flex;\n              flex-direction: column;\n              border-radius: 10px;\n          }\n          .survey-question {\n              font-weight: 500;\n              font-size: 14px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .question-textarea-wrapper {\n              display: flex;\n              flex-direction: column;\n          }\n          .description {\n              font-size: 13px;\n              margin-top: 5px;\n              opacity: .60;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .ratings-number {\n              background-color: ${appearance?.ratingButtonColor || 'white'};\n              font-size: 16px;\n              font-weight: 600;\n              padding: 8px 0px;\n              border: none;\n          }\n          .ratings-number:hover {\n              cursor: pointer;\n          }\n          .rating-options {\n              margin-top: 14px;\n          }\n          .rating-options-number {\n              display: grid;\n              border-radius: 6px;\n              overflow: hidden;\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n          }\n          .rating-options-number > .ratings-number {\n              border-right: 1px solid ${appearance?.borderColor || '#c9c6c6'};\n          }\n          .rating-options-number > .ratings-number:last-of-type {\n              border-right: 0px;\n          }\n          .rating-options-number .rating-active {\n              background: ${appearance?.ratingButtonActiveColor || 'black'};\n          }\n          .rating-options-emoji {\n              display: flex;\n              justify-content: space-between;\n          }\n          .ratings-emoji {\n              font-size: 16px;\n              background-color: transparent;\n              border: none;\n              padding: 0px;\n          }\n          .ratings-emoji:hover {\n              cursor: pointer;\n          }\n          .ratings-emoji.rating-active svg {\n              fill: ${appearance?.ratingButtonActiveColor || 'black'};\n          }\n          .emoji-svg {\n              fill: ${appearance?.ratingButtonColor || '#c9c6c6'};\n          }\n          .rating-text {\n              display: flex;\n              flex-direction: row;\n              font-size: 11px;\n              justify-content: space-between;\n              margin-top: 6px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              opacity: .60;\n          }\n          .multiple-choice-options {\n              margin-top: 13px;\n              font-size: 14px;\n          }\n          .multiple-choice-options .choice-option {\n              display: flex;\n              align-items: center;\n              gap: 4px;\n              font-size: 13px;\n              cursor: pointer;\n              margin-bottom: 5px;\n              position: relative;\n          }\n          .multiple-choice-options > .choice-option:last-of-type {\n              margin-bottom: 0px;\n          }\n          .multiple-choice-options input {\n              cursor: pointer;\n              position: absolute;\n              opacity: 0;\n          }\n          .choice-check {\n              position: absolute;\n              right: 10px;\n              background: white;\n          }\n          .choice-check svg {\n              display: none;\n          }\n          .multiple-choice-options .choice-option:hover .choice-check svg {\n              display: inline-block;\n              opacity: .25;\n          }\n          .multiple-choice-options input:checked + label + .choice-check svg {\n              display: inline-block;\n              opacity: 100% !important;\n          }\n          .multiple-choice-options input:checked + label {\n              font-weight: bold;\n              border: 1.5px solid rgba(0,0,0);\n          }\n          .multiple-choice-options input:checked + label input {\n              font-weight: bold;\n          }\n          .multiple-choice-options label {\n              width: 100%;\n              cursor: pointer;\n              padding: 10px;\n              border: 1.5px solid rgba(0,0,0,.25);\n              border-radius: 4px;\n              background: white;\n          }\n          .multiple-choice-options .choice-option-open label {\n              padding-right: 30px;\n              display: flex;\n              flex-wrap: wrap;\n              gap: 8px;\n              max-width: 100%;\n          }\n          .multiple-choice-options .choice-option-open label span {\n              width: 100%;\n          }\n          .multiple-choice-options .choice-option-open input:disabled + label {\n              opacity: 0.6;\n          }\n          .multiple-choice-options .choice-option-open label input {\n              position: relative;\n              opacity: 1;\n              flex-grow: 1;\n              border: 0;\n              outline: 0;\n          }\n          .thank-you-message {\n              position: fixed;\n              bottom: 0px;\n              z-index: ${parseInt(appearance?.zIndex || '99999')};\n              box-shadow: -6px 0 16px -8px rgb(0 0 0 / 8%), -9px 0 28px 0 rgb(0 0 0 / 5%), -12px 0 48px 16px rgb(0 0 0 / 3%);\n              font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n              border-top-left-radius: 10px;\n              border-top-right-radius: 10px;\n              padding: 20px 25px 10px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n              text-align: center;\n              max-width: ${parseInt(appearance?.maxWidth || '300')}px;\n              min-width: 150px;\n              width: 100%;\n              ${positions[appearance?.position || 'right'] || 'right: 30px;'}\n          }\n          .thank-you-message-body {\n              margin-top: 6px;\n              font-size: 14px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .thank-you-message-header {\n              margin: 10px 0px 0px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .thank-you-message-container .form-submit {\n              margin-top: 20px;\n              margin-bottom: 10px;\n          }\n          .thank-you-message-countdown {\n              margin-left: 6px;\n          }\n          .bottom-section {\n              margin-top: 14px;\n          }\n          `\n}\n\nfunction nameToHex(name: string) {\n    return {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        'indianred ': '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrodyellow: '#fafad2',\n        lightgrey: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370d8',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#d87093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32',\n    }[name.toLowerCase()]\n}\n\nfunction hex2rgb(c: string) {\n    if (c[0] === '#') {\n        const hexColor = c.replace(/^#/, '')\n        const r = parseInt(hexColor.slice(0, 2), 16)\n        const g = parseInt(hexColor.slice(2, 4), 16)\n        const b = parseInt(hexColor.slice(4, 6), 16)\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\n    }\n    return 'rgb(255, 255, 255)'\n}\n\nexport function getContrastingTextColor(color: string = defaultBackgroundColor) {\n    let rgb\n    if (color[0] === '#') {\n        rgb = hex2rgb(color)\n    }\n    if (color.startsWith('rgb')) {\n        rgb = color\n    }\n    // otherwise it's a color name\n    const nameColorToHex = nameToHex(color)\n    if (nameColorToHex) {\n        rgb = hex2rgb(nameColorToHex)\n    }\n    if (!rgb) {\n        return 'black'\n    }\n    const colorMatch = rgb.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)\n    if (colorMatch) {\n        const r = parseInt(colorMatch[1])\n        const g = parseInt(colorMatch[2])\n        const b = parseInt(colorMatch[3])\n        const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b))\n        return hsp > 127.5 ? 'black' : 'white'\n    }\n    return 'black'\n}\nexport function getTextColor(el: HTMLElement) {\n    const backgroundColor = window.getComputedStyle(el).backgroundColor\n    if (backgroundColor === 'rgba(0, 0, 0, 0)') {\n        return 'black'\n    }\n    const colorMatch = backgroundColor.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)\n    if (!colorMatch) return 'black'\n\n    const r = parseInt(colorMatch[1])\n    const g = parseInt(colorMatch[2])\n    const b = parseInt(colorMatch[3])\n    const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b))\n    return hsp > 127.5 ? 'black' : 'white'\n}\n\nexport const defaultSurveyAppearance: SurveyAppearance = {\n    backgroundColor: '#eeeded',\n    submitButtonColor: 'black',\n    ratingButtonColor: 'white',\n    ratingButtonActiveColor: 'black',\n    borderColor: '#c9c6c6',\n    placeholder: 'Start typing...',\n    whiteLabel: false,\n    displayThankYouMessage: true,\n    thankYouMessageHeader: 'Thank you for your feedback!',\n    position: 'right',\n}\n\nexport const defaultBackgroundColor = '#eeeded'\n\nexport const createShadow = (styleSheet: string, surveyId: string) => {\n    const div = document.createElement('div')\n    div.className = `PostHogSurvey${surveyId}`\n    const shadow = div.attachShadow({ mode: 'open' })\n    if (styleSheet) {\n        const styleElement = Object.assign(document.createElement('style'), {\n            innerText: styleSheet,\n        })\n        shadow.appendChild(styleElement)\n    }\n    document.body.appendChild(div)\n    return shadow\n}\n\nexport const sendSurveyEvent = (\n    responses: Record<string, string | number | string[] | null> = {},\n    survey: Survey,\n    posthog?: PostHog\n) => {\n    if (!posthog) return\n    localStorage.setItem(`seenSurvey_${survey.id}`, 'true')\n    posthog.capture('survey sent', {\n        $survey_name: survey.name,\n        $survey_id: survey.id,\n        $survey_questions: survey.questions.map((question) => question.question),\n        sessionRecordingUrl: posthog.get_session_replay_url?.(),\n        ...responses,\n        $set: {\n            [`$survey_responded/${survey.id}`]: true,\n        },\n    })\n    window.dispatchEvent(new Event('PHSurveySent'))\n}\n\nexport const SurveyContext = createContext<{\n    readOnly: boolean\n    previewQuestionIndex: number\n    textColor: string\n}>({\n    readOnly: false,\n    previewQuestionIndex: 0,\n    textColor: 'black',\n})\n","import{options as e,h as t,Fragment as r}from\"preact\";var o=/[\\s\\n\\\\/='\"\\0<>]/,n=/^(xlink|xmlns|xml)([A-Z])/,a=/^accessK|^auto[A-Z]|^ch|^col|cont|cross|dateT|encT|form[A-Z]|frame|hrefL|inputM|maxL|minL|noV|playsI|readO|rowS|spellC|src[A-Z]|tabI|item[A-Z]/,i=/^ac|^ali|arabic|basel|cap|clipPath$|clipRule$|color|dominant|enable|fill|flood|font|glyph[^R]|horiz|image|letter|lighting|marker[^WUH]|overline|panose|pointe|paint|rendering|shape|stop|strikethrough|stroke|text[^L]|transform|underline|unicode|units|^v[^i]|^w|^xH/,l=/[\"&<]/;function s(e){if(0===e.length||!1===l.test(e))return e;for(var t=0,r=0,o=\"\",n=\"\";r<e.length;r++){switch(e.charCodeAt(r)){case 34:n=\"&quot;\";break;case 38:n=\"&amp;\";break;case 60:n=\"&lt;\";break;default:continue}r!==t&&(o+=e.slice(t,r)),o+=n,t=r+1}return r!==t&&(o+=e.slice(t,r)),o}var c={},p=new Set([\"animation-iteration-count\",\"border-image-outset\",\"border-image-slice\",\"border-image-width\",\"box-flex\",\"box-flex-group\",\"box-ordinal-group\",\"column-count\",\"fill-opacity\",\"flex\",\"flex-grow\",\"flex-negative\",\"flex-order\",\"flex-positive\",\"flex-shrink\",\"flood-opacity\",\"font-weight\",\"grid-column\",\"grid-row\",\"line-clamp\",\"line-height\",\"opacity\",\"order\",\"orphans\",\"stop-opacity\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"tab-size\",\"widows\",\"z-index\",\"zoom\"]),u=/[A-Z]/g;function f(e){var t=\"\";for(var r in e){var o=e[r];if(null!=o&&\"\"!==o){var n=\"-\"==r[0]?r:c[r]||(c[r]=r.replace(u,\"-$&\").toLowerCase()),a=\";\";\"number\"!=typeof o||n.startsWith(\"--\")||p.has(n)||(a=\"px;\"),t=t+n+\":\"+o+a}}return t||void 0}var _,d,h,m,v=[],g=Array.isArray,y=Object.assign;function b(o,n){var a=e.__s;e.__s=!0,_=e.__b,d=e.diffed,h=e.__r,m=e.unmount;var i=t(r,null);i.__k=[o];try{return C(o,n||k,!1,void 0,i)}finally{e.__c&&e.__c(o,v),e.__s=a,v.length=0}}function x(){this.__d=!0}var k={};function w(e,t){var r,o=e.type,n=!0;return e.__c?(n=!1,(r=e.__c).state=r.__s):r=new o(e.props,t),e.__c=r,r.__v=e,r.props=e.props,r.context=t,r.__d=!0,null==r.state&&(r.state=k),null==r.__s&&(r.__s=r.state),o.getDerivedStateFromProps?r.state=y({},r.state,o.getDerivedStateFromProps(r.props,r.state)):n&&r.componentWillMount?(r.componentWillMount(),r.state=r.__s!==r.state?r.__s:r.state):!n&&r.componentWillUpdate&&r.componentWillUpdate(),h&&h(e),r.render(r.props,r.state,t)}function C(t,l,c,p,u){if(null==t||!0===t||!1===t||\"\"===t)return\"\";if(\"object\"!=typeof t)return\"function\"==typeof t?\"\":s(t+\"\");if(g(t)){var v=\"\";u.__k=t;for(var b=0;b<t.length;b++){var k=t[b];null!=k&&\"boolean\"!=typeof k&&(v+=C(k,l,c,p,u))}return v}if(void 0!==t.constructor)return\"\";t.__=u,_&&_(t);var A,L,D,E=t.type,T=t.props,Z=l;if(\"function\"==typeof E){if(E===r){if(T.tpl){for(var F=\"\",U=0;U<T.tpl.length;U++)if(F+=T.tpl[U],T.exprs&&U<T.exprs.length){var W=T.exprs[U];if(null==W)continue;\"object\"!=typeof W||void 0!==W.constructor&&!g(W)?F+=W:F+=C(W,l,c,p,t)}return F}if(T.UNSTABLE_comment)return\"\\x3c!--\"+s(T.UNSTABLE_comment||\"\")+\"--\\x3e\";L=T.children}else{if(null!=(A=E.contextType)){var $=l[A.__c];Z=$?$.props.value:A.__}if(E.prototype&&\"function\"==typeof E.prototype.render)L=w(t,Z),D=t.__c;else{t.__c=D={__v:t,props:T,context:Z,setState:x,forceUpdate:x,__d:!0,__h:[]};for(var j=0;D.__d&&j++<25;)D.__d=!1,h&&h(t),L=E.call(D,T,Z);D.__d=!0}if(null!=D.getChildContext&&(l=y({},l,D.getChildContext())),(E.getDerivedStateFromError||D.componentDidCatch)&&e.errorBoundaries){var M=\"\";L=null!=L&&L.type===r&&null==L.key?L.props.children:L;try{return M=C(L,l,c,p,t)}catch(e){return E.getDerivedStateFromError&&(D.__s=E.getDerivedStateFromError(e)),D.componentDidCatch&&D.componentDidCatch(e,{}),D.__d&&(L=w(t,l),null!=(D=t.__c).getChildContext&&(l=y({},l,D.getChildContext())),M=C(L=null!=L&&L.type===r&&null==L.key?L.props.children:L,l,c,p,t)),M}finally{d&&d(t),t.__=void 0,m&&m(t)}}}var z=C(L=null!=L&&L.type===r&&null==L.key?L.props.children:L,l,c,p,t);return d&&d(t),t.__=void 0,m&&m(t),z}var H,q=\"<\"+E,B=\"\";for(var I in T){var N=T[I];switch(I){case\"children\":H=N;continue;case\"key\":case\"ref\":case\"__self\":case\"__source\":continue;case\"htmlFor\":if(\"for\"in T)continue;I=\"for\";break;case\"className\":if(\"class\"in T)continue;I=\"class\";break;case\"defaultChecked\":I=\"checked\";break;case\"defaultSelected\":I=\"selected\";break;case\"defaultValue\":case\"value\":switch(I=\"value\",E){case\"textarea\":H=N;continue;case\"select\":p=N;continue;case\"option\":p!=N||\"selected\"in T||(q+=\" selected\")}break;case\"dangerouslySetInnerHTML\":B=N&&N.__html;continue;case\"style\":\"object\"==typeof N&&(N=f(N));break;case\"acceptCharset\":I=\"accept-charset\";break;case\"httpEquiv\":I=\"http-equiv\";break;default:if(n.test(I))I=I.replace(n,\"$1:$2\").toLowerCase();else{if(o.test(I))continue;\"-\"!==I[4]&&\"draggable\"!==I||null==N?c?i.test(I)&&(I=\"panose1\"===I?\"panose-1\":I.replace(/([A-Z])/g,\"-$1\").toLowerCase()):a.test(I)&&(I=I.toLowerCase()):N+=\"\"}}null!=N&&!1!==N&&\"function\"!=typeof N&&(q=!0===N||\"\"===N?q+\" \"+I:q+\" \"+I+'=\"'+s(N+\"\")+'\"')}if(o.test(E))throw new Error(E+\" is not a valid HTML tag name in \"+q+\">\");return B||(\"string\"==typeof H?B=s(H):null!=H&&!1!==H&&!0!==H&&(B=C(H,l,\"svg\"===E||\"foreignObject\"!==E&&c,p,t))),d&&d(t),t.__=void 0,m&&m(t),!B&&S.has(E)?q+\"/>\":q+\">\"+B+\"</\"+E+\">\"}var S=new Set([\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\"]),A=b,L=b;export default b;export{A as render,L as renderToStaticMarkup,b as renderToString};\n//# sourceMappingURL=index.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function h(n){return o=1,s(B,n)}function s(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function p(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function y(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,y(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=h();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[],t=0)),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,p as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,y as useLayoutEffect,F as useMemo,s as useReducer,_ as useRef,h as useState};\n//# sourceMappingURL=hooks.module.js.map\n","// eslint-disable-next-line posthog-js/no-direct-array-check\nconst nativeIsArray = Array.isArray\nconst ObjProto = Object.prototype\nexport const hasOwnProperty = ObjProto.hasOwnProperty\nconst toString = ObjProto.toString\n\nexport const _isArray =\n    nativeIsArray ||\n    function (obj: any): obj is any[] {\n        return toString.call(obj) === '[object Array]'\n    }\nexport const _isUint8Array = function (x: unknown): x is Uint8Array {\n    return toString.call(x) === '[object Uint8Array]'\n}\n// from a comment on http://dbj.org/dbj/?p=286\n// fails on only one very rare and deliberate custom object:\n// let bomb = { toString : undefined, valueOf: function(o) { return \"function BOMBA!\"; }};\nexport const _isFunction = function (f: any): f is (...args: any[]) => any {\n    // eslint-disable-next-line posthog-js/no-direct-function-check\n    return typeof f === 'function'\n}\n// Underscore Addons\nexport const _isObject = function (x: unknown): x is Record<string, any> {\n    // eslint-disable-next-line posthog-js/no-direct-object-check\n    return x === Object(x) && !_isArray(x)\n}\nexport const _isEmptyObject = function (x: unknown): x is Record<string, any> {\n    if (_isObject(x)) {\n        for (const key in x) {\n            if (hasOwnProperty.call(x, key)) {\n                return false\n            }\n        }\n        return true\n    }\n    return false\n}\nexport const _isUndefined = function (x: unknown): x is undefined {\n    return x === void 0\n}\n\nexport const _isString = function (x: unknown): x is string {\n    // eslint-disable-next-line posthog-js/no-direct-string-check\n    return toString.call(x) == '[object String]'\n}\n\nexport const _isEmptyString = function (x: unknown): boolean {\n    return _isString(x) && x.trim().length === 0\n}\n\nexport const _isNull = function (x: unknown): x is null {\n    // eslint-disable-next-line posthog-js/no-direct-null-check\n    return x === null\n}\n\n/*\n    sometimes you want to check if something is null or undefined\n    that's what this is for\n */\nexport const _isNullish = function (x: unknown): x is null | undefined {\n    return _isUndefined(x) || _isNull(x)\n}\n\nexport const _isDate = function (x: unknown): x is Date {\n    // eslint-disable-next-line posthog-js/no-direct-date-check\n    return toString.call(x) == '[object Date]'\n}\nexport const _isNumber = function (x: unknown): x is number {\n    // eslint-disable-next-line posthog-js/no-direct-number-check\n    return toString.call(x) == '[object Number]'\n}\nexport const _isBoolean = function (x: unknown): x is boolean {\n    // eslint-disable-next-line posthog-js/no-direct-boolean-check\n    return toString.call(x) === '[object Boolean]'\n}\n\nexport const _isDocument = (x: unknown): x is Document => {\n    // eslint-disable-next-line posthog-js/no-direct-document-check\n    return x instanceof Document\n}\n\nexport const _isFormData = (x: unknown): x is FormData => {\n    // eslint-disable-next-line posthog-js/no-direct-form-data-check\n    return x instanceof FormData\n}\n\nexport const _isFile = (x: unknown): x is File => {\n    // eslint-disable-next-line posthog-js/no-direct-file-check\n    return x instanceof File\n}\n","export const satisfiedEmoji = (\n    <svg className=\"emoji-svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\">\n        <path d=\"M626-533q22.5 0 38.25-15.75T680-587q0-22.5-15.75-38.25T626-641q-22.5 0-38.25 15.75T572-587q0 22.5 15.75 38.25T626-533Zm-292 0q22.5 0 38.25-15.75T388-587q0-22.5-15.75-38.25T334-641q-22.5 0-38.25 15.75T280-587q0 22.5 15.75 38.25T334-533Zm146 272q66 0 121.5-35.5T682-393h-52q-23 40-63 61.5T480.5-310q-46.5 0-87-21T331-393h-53q26 61 81 96.5T480-261Zm0 181q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 340q142.375 0 241.188-98.812Q820-337.625 820-480t-98.812-241.188Q622.375-820 480-820t-241.188 98.812Q140-622.375 140-480t98.812 241.188Q337.625-140 480-140Z\" />\n    </svg>\n)\nexport const neutralEmoji = (\n    <svg className=\"emoji-svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\">\n        <path d=\"M626-533q22.5 0 38.25-15.75T680-587q0-22.5-15.75-38.25T626-641q-22.5 0-38.25 15.75T572-587q0 22.5 15.75 38.25T626-533Zm-292 0q22.5 0 38.25-15.75T388-587q0-22.5-15.75-38.25T334-641q-22.5 0-38.25 15.75T280-587q0 22.5 15.75 38.25T334-533Zm20 194h253v-49H354v49ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 340q142.375 0 241.188-98.812Q820-337.625 820-480t-98.812-241.188Q622.375-820 480-820t-241.188 98.812Q140-622.375 140-480t98.812 241.188Q337.625-140 480-140Z\" />\n    </svg>\n)\nexport const dissatisfiedEmoji = (\n    <svg className=\"emoji-svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\">\n        <path d=\"M626-533q22.5 0 38.25-15.75T680-587q0-22.5-15.75-38.25T626-641q-22.5 0-38.25 15.75T572-587q0 22.5 15.75 38.25T626-533Zm-292 0q22.5 0 38.25-15.75T388-587q0-22.5-15.75-38.25T334-641q-22.5 0-38.25 15.75T280-587q0 22.5 15.75 38.25T334-533Zm146.174 116Q413-417 358.5-379.5T278-280h53q22-42 62.173-65t87.5-23Q528-368 567.5-344.5T630-280h52q-25-63-79.826-100-54.826-37-122-37ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 340q142.375 0 241.188-98.812Q820-337.625 820-480t-98.812-241.188Q622.375-820 480-820t-241.188 98.812Q140-622.375 140-480t98.812 241.188Q337.625-140 480-140Z\" />\n    </svg>\n)\nexport const veryDissatisfiedEmoji = (\n    <svg className=\"emoji-svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\">\n        <path d=\"M480-417q-67 0-121.5 37.5T278-280h404q-25-63-80-100t-122-37Zm-183-72 50-45 45 45 31-36-45-45 45-45-31-36-45 45-50-45-31 36 45 45-45 45 31 36Zm272 0 44-45 51 45 31-36-45-45 45-45-31-36-51 45-44-45-31 36 44 45-44 45 31 36ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 340q142 0 241-99t99-241q0-142-99-241t-241-99q-142 0-241 99t-99 241q0 142 99 241t241 99Z\" />\n    </svg>\n)\nexport const verySatisfiedEmoji = (\n    <svg className=\"emoji-svg\" xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\">\n        <path d=\"M479.504-261Q537-261 585.5-287q48.5-26 78.5-72.4 6-11.6-.75-22.6-6.75-11-20.25-11H316.918Q303-393 296.5-382t-.5 22.6q30 46.4 78.5 72.4 48.5 26 105.004 26ZM347-578l27 27q7.636 8 17.818 8Q402-543 410-551q8-8 8-18t-8-18l-42-42q-8.8-9-20.9-9-12.1 0-21.1 9l-42 42q-8 7.636-8 17.818Q276-559 284-551q8 8 18 8t18-8l27-27Zm267 0 27 27q7.714 8 18 8t18-8q8-7.636 8-17.818Q685-579 677-587l-42-42q-8.8-9-20.9-9-12.1 0-21.1 9l-42 42q-8 7.714-8 18t8 18q7.636 8 17.818 8Q579-543 587-551l27-27ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 340q142.375 0 241.188-98.812Q820-337.625 820-480t-98.812-241.188Q622.375-820 480-820t-241.188 98.812Q140-622.375 140-480t98.812 241.188Q337.625-140 480-140Z\" />\n    </svg>\n)\nexport const cancelSVG = (\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M0.164752 0.164752C0.384422 -0.0549175 0.740578 -0.0549175 0.960248 0.164752L6 5.20451L11.0398 0.164752C11.2594 -0.0549175 11.6156 -0.0549175 11.8352 0.164752C12.0549 0.384422 12.0549 0.740578 11.8352 0.960248L6.79549 6L11.8352 11.0398C12.0549 11.2594 12.0549 11.6156 11.8352 11.8352C11.6156 12.0549 11.2594 12.0549 11.0398 11.8352L6 6.79549L0.960248 11.8352C0.740578 12.0549 0.384422 12.0549 0.164752 11.8352C-0.0549175 11.6156 -0.0549175 11.2594 0.164752 11.0398L5.20451 6L0.164752 0.960248C-0.0549175 0.740578 -0.0549175 0.384422 0.164752 0.164752Z\"\n            fill=\"black\"\n        />\n    </svg>\n)\nexport const IconPosthogLogo = (\n    <svg width=\"77\" height=\"14\" viewBox=\"0 0 77 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_2415_6911)\">\n            <mask\n                id=\"mask0_2415_6911\"\n                style={{ maskType: 'luminance' }}\n                maskUnits=\"userSpaceOnUse\"\n                x=\"0\"\n                y=\"0\"\n                width=\"77\"\n                height=\"14\"\n            >\n                <path d=\"M0.5 0H76.5V14H0.5V0Z\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0_2415_6911)\">\n                <path\n                    d=\"M5.77226 8.02931C5.59388 8.37329 5.08474 8.37329 4.90634 8.02931L4.4797 7.20672C4.41155 7.07535 4.41155 6.9207 4.4797 6.78933L4.90634 5.96669C5.08474 5.62276 5.59388 5.62276 5.77226 5.96669L6.19893 6.78933C6.26709 6.9207 6.26709 7.07535 6.19893 7.20672L5.77226 8.02931ZM5.77226 12.6946C5.59388 13.0386 5.08474 13.0386 4.90634 12.6946L4.4797 11.872C4.41155 11.7406 4.41155 11.586 4.4797 11.4546L4.90634 10.632C5.08474 10.288 5.59388 10.288 5.77226 10.632L6.19893 11.4546C6.26709 11.586 6.26709 11.7406 6.19893 11.872L5.77226 12.6946Z\"\n                    fill=\"#1D4AFF\"\n                />\n                <path\n                    d=\"M0.5 10.9238C0.5 10.508 1.02142 10.2998 1.32637 10.5938L3.54508 12.7327C3.85003 13.0267 3.63405 13.5294 3.20279 13.5294H0.984076C0.716728 13.5294 0.5 13.3205 0.5 13.0627V10.9238ZM0.5 8.67083C0.5 8.79459 0.551001 8.91331 0.641783 9.00081L5.19753 13.3927C5.28831 13.4802 5.41144 13.5294 5.53982 13.5294H8.0421C8.47337 13.5294 8.68936 13.0267 8.3844 12.7327L1.32637 5.92856C1.02142 5.63456 0.5 5.84278 0.5 6.25854V8.67083ZM0.5 4.00556C0.5 4.12932 0.551001 4.24802 0.641783 4.33554L10.0368 13.3927C10.1276 13.4802 10.2508 13.5294 10.3791 13.5294H12.8814C13.3127 13.5294 13.5287 13.0267 13.2237 12.7327L1.32637 1.26329C1.02142 0.969312 0.5 1.17752 0.5 1.59327V4.00556ZM5.33931 4.00556C5.33931 4.12932 5.39033 4.24802 5.4811 4.33554L14.1916 12.7327C14.4965 13.0267 15.0179 12.8185 15.0179 12.4028V9.99047C15.0179 9.86671 14.9669 9.74799 14.8762 9.66049L6.16568 1.26329C5.86071 0.969307 5.33931 1.17752 5.33931 1.59327V4.00556ZM11.005 1.26329C10.7 0.969307 10.1786 1.17752 10.1786 1.59327V4.00556C10.1786 4.12932 10.2296 4.24802 10.3204 4.33554L14.1916 8.06748C14.4965 8.36148 15.0179 8.15325 15.0179 7.7375V5.3252C15.0179 5.20144 14.9669 5.08272 14.8762 4.99522L11.005 1.26329Z\"\n                    fill=\"#F9BD2B\"\n                />\n                <path\n                    d=\"M21.0852 10.981L16.5288 6.58843C16.2238 6.29443 15.7024 6.50266 15.7024 6.91841V13.0627C15.7024 13.3205 15.9191 13.5294 16.1865 13.5294H23.2446C23.5119 13.5294 23.7287 13.3205 23.7287 13.0627V12.5032C23.7287 12.2455 23.511 12.0396 23.2459 12.0063C22.4323 11.9042 21.6713 11.546 21.0852 10.981ZM18.0252 12.0365C17.5978 12.0365 17.251 11.7021 17.251 11.2901C17.251 10.878 17.5978 10.5436 18.0252 10.5436C18.4527 10.5436 18.7996 10.878 18.7996 11.2901C18.7996 11.7021 18.4527 12.0365 18.0252 12.0365Z\"\n                    fill=\"currentColor\"\n                />\n                <path\n                    d=\"M0.5 13.0627C0.5 13.3205 0.716728 13.5294 0.984076 13.5294H3.20279C3.63405 13.5294 3.85003 13.0267 3.54508 12.7327L1.32637 10.5938C1.02142 10.2998 0.5 10.508 0.5 10.9238V13.0627ZM5.33931 5.13191L1.32637 1.26329C1.02142 0.969306 0.5 1.17752 0.5 1.59327V4.00556C0.5 4.12932 0.551001 4.24802 0.641783 4.33554L5.33931 8.86412V5.13191ZM1.32637 5.92855C1.02142 5.63455 0.5 5.84278 0.5 6.25853V8.67083C0.5 8.79459 0.551001 8.91331 0.641783 9.00081L5.33931 13.5294V9.79717L1.32637 5.92855Z\"\n                    fill=\"#1D4AFF\"\n                />\n                <path\n                    d=\"M10.1787 5.3252C10.1787 5.20144 10.1277 5.08272 10.0369 4.99522L6.16572 1.26329C5.8608 0.969306 5.33936 1.17752 5.33936 1.59327V4.00556C5.33936 4.12932 5.39037 4.24802 5.48114 4.33554L10.1787 8.86412V5.3252ZM5.33936 13.5294H8.04214C8.47341 13.5294 8.6894 13.0267 8.38443 12.7327L5.33936 9.79717V13.5294ZM5.33936 5.13191V8.67083C5.33936 8.79459 5.39037 8.91331 5.48114 9.00081L10.1787 13.5294V9.99047C10.1787 9.86671 10.1277 9.74803 10.0369 9.66049L5.33936 5.13191Z\"\n                    fill=\"#F54E00\"\n                />\n                <path\n                    d=\"M29.375 11.6667H31.3636V8.48772H33.0249C34.8499 8.48772 36.0204 7.4443 36.0204 5.83052C36.0204 4.21681 34.8499 3.17334 33.0249 3.17334H29.375V11.6667ZM31.3636 6.84972V4.81136H32.8236C33.5787 4.81136 34.0318 5.19958 34.0318 5.83052C34.0318 6.4615 33.5787 6.84972 32.8236 6.84972H31.3636ZM39.618 11.7637C41.5563 11.7637 42.9659 10.429 42.9659 8.60905C42.9659 6.78905 41.5563 5.45438 39.618 5.45438C37.6546 5.45438 36.2701 6.78905 36.2701 8.60905C36.2701 10.429 37.6546 11.7637 39.618 11.7637ZM38.1077 8.60905C38.1077 7.63838 38.7118 6.97105 39.618 6.97105C40.5116 6.97105 41.1157 7.63838 41.1157 8.60905C41.1157 9.57972 40.5116 10.2471 39.618 10.2471C38.7118 10.2471 38.1077 9.57972 38.1077 8.60905ZM46.1482 11.7637C47.6333 11.7637 48.6402 10.8658 48.6402 9.81025C48.6402 7.33505 45.2294 8.13585 45.2294 7.16518C45.2294 6.8983 45.5189 6.72843 45.9342 6.72843C46.3622 6.72843 46.8782 6.98318 47.0418 7.54132L48.527 6.94678C48.2375 6.06105 47.1677 5.45438 45.8713 5.45438C44.4743 5.45438 43.6058 6.25518 43.6058 7.21372C43.6058 9.53118 46.9663 8.88812 46.9663 9.84665C46.9663 10.1864 46.6391 10.417 46.1482 10.417C45.4434 10.417 44.9525 9.94376 44.8015 9.3735L43.3164 9.93158C43.6436 10.8537 44.6001 11.7637 46.1482 11.7637ZM53.4241 11.606L53.2982 10.0651C53.0843 10.1743 52.8074 10.2106 52.5808 10.2106C52.1278 10.2106 51.8257 9.89523 51.8257 9.34918V7.03172H53.3612V5.55145H51.8257V3.78001H49.9755V5.55145H48.9687V7.03172H49.9755V9.57972C49.9755 11.06 51.0202 11.7637 52.3921 11.7637C52.7696 11.7637 53.122 11.7031 53.4241 11.606ZM59.8749 3.17334V6.47358H56.376V3.17334H54.3874V11.6667H56.376V8.11158H59.8749V11.6667H61.8761V3.17334H59.8749ZM66.2899 11.7637C68.2281 11.7637 69.6378 10.429 69.6378 8.60905C69.6378 6.78905 68.2281 5.45438 66.2899 5.45438C64.3265 5.45438 62.942 6.78905 62.942 8.60905C62.942 10.429 64.3265 11.7637 66.2899 11.7637ZM64.7796 8.60905C64.7796 7.63838 65.3837 6.97105 66.2899 6.97105C67.1835 6.97105 67.7876 7.63838 67.7876 8.60905C67.7876 9.57972 67.1835 10.2471 66.2899 10.2471C65.3837 10.2471 64.7796 9.57972 64.7796 8.60905ZM73.2088 11.4725C73.901 11.4725 74.5177 11.242 74.845 10.8416V11.424C74.845 12.1034 74.2786 12.5767 73.4102 12.5767C72.7935 12.5767 72.2523 12.2854 72.1642 11.788L70.4776 12.0428C70.7042 13.1955 71.925 13.972 73.4102 13.972C75.361 13.972 76.6574 12.8679 76.6574 11.2298V5.55145H74.8324V6.07318C74.4926 5.69705 73.9136 5.45438 73.171 5.45438C71.409 5.45438 70.3014 6.61918 70.3014 8.46345C70.3014 10.3077 71.409 11.4725 73.2088 11.4725ZM72.1012 8.46345C72.1012 7.55345 72.655 6.97105 73.5109 6.97105C74.3793 6.97105 74.9331 7.55345 74.9331 8.46345C74.9331 9.37345 74.3793 9.95585 73.5109 9.95585C72.655 9.95585 72.1012 9.37345 72.1012 8.46345Z\"\n                    fill=\"currentColor\"\n                />\n            </g>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_2415_6911\">\n                <rect width=\"76\" height=\"14\" fill=\"white\" transform=\"translate(0.5)\" />\n            </clipPath>\n        </defs>\n    </svg>\n)\nexport const checkSVG = (\n    <svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M5.30769 10.6923L4.77736 11.2226C4.91801 11.3633 5.10878 11.4423 5.30769 11.4423C5.5066 11.4423 5.69737 11.3633 5.83802 11.2226L5.30769 10.6923ZM15.5303 1.53033C15.8232 1.23744 15.8232 0.762563 15.5303 0.46967C15.2374 0.176777 14.7626 0.176777 14.4697 0.46967L15.5303 1.53033ZM1.53033 5.85429C1.23744 5.56139 0.762563 5.56139 0.46967 5.85429C0.176777 6.14718 0.176777 6.62205 0.46967 6.91495L1.53033 5.85429ZM5.83802 11.2226L15.5303 1.53033L14.4697 0.46967L4.77736 10.162L5.83802 11.2226ZM0.46967 6.91495L4.77736 11.2226L5.83802 10.162L1.53033 5.85429L0.46967 6.91495Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n)\n","import { IconPosthogLogo } from '../icons'\nimport { getContrastingTextColor } from '../surveys-utils'\n\nexport function PostHogLogo({ backgroundColor }: { backgroundColor: string }) {\n    const textColor = getContrastingTextColor(backgroundColor)\n\n    return (\n        <a\n            href=\"https://posthog.com\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            style={{ backgroundColor: backgroundColor, color: textColor }}\n            className=\"footer-branding\"\n        >\n            Survey by {IconPosthogLogo}\n        </a>\n    )\n}\n","import { window } from '../../../utils/globals'\n\nimport { SurveyAppearance } from '../../../posthog-surveys-types'\n\nimport { PostHogLogo } from './PostHogLogo'\nimport { useContext } from 'preact/hooks'\nimport {\n    SurveyContext,\n    defaultBackgroundColor,\n    defaultSurveyAppearance,\n    getContrastingTextColor,\n} from '../surveys-utils'\n\nexport function BottomSection({\n    text,\n    submitDisabled,\n    appearance,\n    onSubmit,\n    link,\n}: {\n    text: string\n    submitDisabled: boolean\n    appearance: SurveyAppearance\n    onSubmit: () => void\n    link?: string | null\n}) {\n    const { readOnly } = useContext(SurveyContext)\n    const textColor = getContrastingTextColor(appearance.submitButtonColor || defaultSurveyAppearance.submitButtonColor)\n    return (\n        <div className=\"bottom-section\">\n            <div className=\"buttons\">\n                <button\n                    className=\"form-submit\"\n                    disabled={submitDisabled && !readOnly}\n                    type=\"button\"\n                    style={{ color: textColor }}\n                    onClick={() => {\n                        if (readOnly) return\n                        if (link) {\n                            window?.open(link)\n                        }\n                        onSubmit()\n                    }}\n                >\n                    {text}\n                </button>\n            </div>\n            {!appearance.whiteLabel && (\n                <PostHogLogo backgroundColor={appearance.backgroundColor || defaultBackgroundColor} />\n            )}\n        </div>\n    )\n}\n","import { SurveyContext, defaultSurveyAppearance } from '../surveys-utils'\nimport { cancelSVG } from '../icons'\nimport { useContext } from 'preact/hooks'\n\nexport function QuestionHeader({\n    question,\n    description,\n    backgroundColor,\n}: {\n    question: string\n    description?: string | null\n    backgroundColor?: string\n}) {\n    return (\n        <div style={{ backgroundColor: backgroundColor || defaultSurveyAppearance.backgroundColor }}>\n            <div className=\"survey-question\">{question}</div>\n            {description && <div className=\"description\" dangerouslySetInnerHTML={{ __html: description }} />}\n        </div>\n    )\n}\n\nexport function Cancel({ onClick }: { onClick: () => void }) {\n    const { readOnly } = useContext(SurveyContext)\n\n    return (\n        <div className=\"cancel-btn-wrapper\">\n            <button className=\"form-cancel\" onClick={onClick} disabled={readOnly}>\n                {cancelSVG}\n            </button>\n        </div>\n    )\n}\n","import { BottomSection } from './BottomSection'\nimport { Cancel } from './QuestionHeader'\nimport { SurveyAppearance } from '../../../posthog-surveys-types'\nimport { defaultSurveyAppearance, getContrastingTextColor } from '../surveys-utils'\n\nexport function ConfirmationMessage({\n    confirmationHeader,\n    confirmationDescription,\n    appearance,\n    onClose,\n    styleOverrides,\n}: {\n    confirmationHeader: string\n    confirmationDescription: string\n    appearance: SurveyAppearance\n    onClose: () => void\n    styleOverrides?: React.CSSProperties\n}) {\n    const textColor = getContrastingTextColor(appearance.backgroundColor || defaultSurveyAppearance.backgroundColor)\n\n    return (\n        <>\n            <div className=\"thank-you-message\" style={{ ...styleOverrides }}>\n                <div className=\"thank-you-message-container\">\n                    <Cancel onClick={() => onClose()} />\n                    <h3 className=\"thank-you-message-header\" style={{ color: textColor }}>\n                        {confirmationHeader}\n                    </h3>\n                    {confirmationDescription && (\n                        <div\n                            style={{ color: textColor }}\n                            className=\"thank-you-message-body\"\n                            dangerouslySetInnerHTML={{ __html: confirmationDescription }}\n                        />\n                    )}\n                    <BottomSection\n                        text={'Close'}\n                        submitDisabled={false}\n                        appearance={appearance}\n                        onSubmit={() => onClose()}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useRef, useState } from 'preact/hooks'\nimport { SurveyAppearance } from '../../../posthog-surveys-types'\nimport * as Preact from 'preact'\nimport { getTextColor } from '../surveys-utils'\n\nexport function useContrastingTextColor(options: {\n    appearance: SurveyAppearance\n    defaultTextColor?: string\n    forceUpdate?: boolean\n}): {\n    ref: Preact.RefObject<HTMLElement>\n    textColor: string\n} {\n    const ref = useRef<HTMLElement>(null)\n    const [textColor, setTextColor] = useState(options.defaultTextColor ?? 'black')\n\n    // TODO: useContext to get the background colors instead of querying the DOM\n    useEffect(() => {\n        if (ref.current) {\n            const color = getTextColor(ref.current)\n            setTextColor(color)\n        }\n    }, [options.appearance, options.forceUpdate])\n\n    return {\n        ref,\n        textColor,\n    }\n}\n","import {\n    BasicSurveyQuestion,\n    SurveyAppearance,\n    LinkSurveyQuestion,\n    RatingSurveyQuestion,\n    MultipleSurveyQuestion,\n    SurveyQuestionType,\n} from '../../../posthog-surveys-types'\nimport { RefObject } from 'preact'\nimport { useRef, useState } from 'preact/hooks'\nimport { _isNull, _isArray } from '../../../utils/type-utils'\nimport { useContrastingTextColor } from '../hooks/useContrastingTextColor'\nimport {\n    checkSVG,\n    dissatisfiedEmoji,\n    neutralEmoji,\n    satisfiedEmoji,\n    veryDissatisfiedEmoji,\n    verySatisfiedEmoji,\n} from '../icons'\nimport { defaultSurveyAppearance } from '../surveys-utils'\nimport { BottomSection } from './BottomSection'\nimport { Cancel, QuestionHeader } from './QuestionHeader'\n\nexport function OpenTextQuestion({\n    question,\n    appearance,\n    onSubmit,\n    closeSurveyPopup,\n}: {\n    question: BasicSurveyQuestion\n    appearance: SurveyAppearance\n    onSubmit: (text: string) => void\n    closeSurveyPopup: () => void\n}) {\n    const textRef = useRef(null)\n    const [text, setText] = useState('')\n\n    return (\n        <div\n            className=\"survey-box\"\n            style={{ backgroundColor: appearance.backgroundColor || defaultSurveyAppearance.backgroundColor }}\n            ref={textRef}\n        >\n            <Cancel onClick={() => closeSurveyPopup()} />\n            <QuestionHeader\n                question={question.question}\n                description={question.description}\n                backgroundColor={appearance.backgroundColor}\n            />\n            <textarea rows={4} placeholder={appearance?.placeholder} onInput={(e) => setText(e.currentTarget.value)} />\n            <BottomSection\n                text={question.buttonText || 'Submit'}\n                submitDisabled={!text && !question.optional}\n                appearance={appearance}\n                onSubmit={() => onSubmit(text)}\n            />\n        </div>\n    )\n}\n\nexport function LinkQuestion({\n    question,\n    appearance,\n    onSubmit,\n    closeSurveyPopup,\n}: {\n    question: LinkSurveyQuestion\n    appearance: SurveyAppearance\n    onSubmit: (clicked: string) => void\n    closeSurveyPopup: () => void\n}) {\n    return (\n        <div className=\"survey-box\">\n            <Cancel onClick={() => closeSurveyPopup()} />\n            <QuestionHeader question={question.question} description={question.description} />\n            <BottomSection\n                text={question.buttonText || 'Submit'}\n                submitDisabled={false}\n                link={question.link}\n                appearance={appearance}\n                onSubmit={() => onSubmit('link clicked')}\n            />\n        </div>\n    )\n}\n\nexport function RatingQuestion({\n    question,\n    questionIndex,\n    appearance,\n    onSubmit,\n    closeSurveyPopup,\n}: {\n    question: RatingSurveyQuestion\n    questionIndex: number\n    appearance: SurveyAppearance\n    onSubmit: (rating: number | null) => void\n    closeSurveyPopup: () => void\n}) {\n    const scale = question.scale\n    const starting = question.scale === 10 ? 0 : 1\n    const [rating, setRating] = useState<number | null>(null)\n\n    return (\n        <div className=\"survey-box\">\n            <Cancel onClick={() => closeSurveyPopup()} />\n            <QuestionHeader\n                question={question.question}\n                description={question.description}\n                backgroundColor={appearance.backgroundColor}\n            />\n            <div className=\"rating-section\">\n                <div className=\"rating-options\">\n                    {question.display === 'emoji' && (\n                        <div className=\"rating-options-emoji\">\n                            {(question.scale === 3 ? threeScaleEmojis : fiveScaleEmojis).map((emoji, idx) => {\n                                const active = idx + 1 === rating\n                                return (\n                                    <button\n                                        className={`ratings-emoji question-${questionIndex}-rating-${idx} ${\n                                            active ? 'rating-active' : null\n                                        }`}\n                                        value={idx + 1}\n                                        key={idx}\n                                        type=\"button\"\n                                        onClick={() => {\n                                            setRating(idx + 1)\n                                        }}\n                                    >\n                                        {emoji}\n                                    </button>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {question.display === 'number' && (\n                        <div\n                            className=\"rating-options-number\"\n                            style={{ gridTemplateColumns: `repeat(${scale - starting + 1}, minmax(0, 1fr))` }}\n                        >\n                            {(question.scale === 5 ? fiveScaleNumbers : tenScaleNumbers).map((number, idx) => {\n                                const active = rating === number\n                                return (\n                                    <RatingButton\n                                        key={idx}\n                                        questionIndex={questionIndex}\n                                        active={active}\n                                        appearance={appearance}\n                                        num={number}\n                                        setActiveNumber={(num) => {\n                                            setRating(num)\n                                        }}\n                                    />\n                                )\n                            })}\n                        </div>\n                    )}\n                </div>\n                <div className=\"rating-text\">\n                    <div>{question.lowerBoundLabel}</div>\n                    <div>{question.upperBoundLabel}</div>\n                </div>\n            </div>\n            <BottomSection\n                text={question.buttonText || appearance?.submitButtonText || 'Submit'}\n                submitDisabled={_isNull(rating) && !question.optional}\n                appearance={appearance}\n                onSubmit={() => onSubmit(rating)}\n            />\n        </div>\n    )\n}\n\nexport function RatingButton({\n    num,\n    active,\n    questionIndex,\n    appearance,\n    setActiveNumber,\n}: {\n    num: number\n    active: boolean\n    questionIndex: number\n    appearance: any\n    setActiveNumber: (num: number) => void\n}) {\n    const { textColor, ref } = useContrastingTextColor({ appearance, defaultTextColor: 'black', forceUpdate: active })\n    return (\n        <button\n            ref={ref as RefObject<HTMLButtonElement>}\n            className={`ratings-number question-${questionIndex}-rating-${num} ${active ? 'rating-active' : null}`}\n            type=\"button\"\n            onClick={() => {\n                setActiveNumber(num)\n            }}\n            style={{\n                color: textColor,\n                backgroundColor: active ? appearance.ratingButtonActiveColor : appearance.ratingButtonColor,\n                borderColor: appearance.borderColor,\n            }}\n        >\n            {num}\n        </button>\n    )\n}\n\nexport function MultipleChoiceQuestion({\n    question,\n    questionIndex,\n    appearance,\n    onSubmit,\n    closeSurveyPopup,\n}: {\n    question: MultipleSurveyQuestion\n    questionIndex: number\n    appearance: SurveyAppearance\n    onSubmit: (choices: string | string[] | null) => void\n    closeSurveyPopup: () => void\n}) {\n    const textRef = useRef(null)\n    const [selectedChoices, setSelectedChoices] = useState<string | string[] | null>(\n        question.type === SurveyQuestionType.MultipleChoice ? [] : null\n    )\n    const [openChoiceSelected, setOpenChoiceSelected] = useState(false)\n    const [openEndedInput, setOpenEndedInput] = useState('')\n\n    const inputType = question.type === SurveyQuestionType.SingleChoice ? 'radio' : 'checkbox'\n    return (\n        <div\n            className=\"survey-box\"\n            style={{ backgroundColor: appearance.backgroundColor || defaultSurveyAppearance.backgroundColor }}\n            ref={textRef}\n        >\n            <Cancel onClick={() => closeSurveyPopup()} />\n            <QuestionHeader\n                question={question.question}\n                description={question.description}\n                backgroundColor={appearance.backgroundColor}\n            />\n            <div className=\"multiple-choice-options\">\n                {question.choices.map((choice: string, idx: number) => {\n                    let choiceClass = 'choice-option'\n                    const val = choice\n                    const option = choice\n                    if (!!question.hasOpenChoice && idx === question.choices.length - 1) {\n                        choiceClass += ' choice-option-open'\n                    }\n                    return (\n                        <div className={choiceClass}>\n                            <input\n                                type={inputType}\n                                id={`surveyQuestion${questionIndex}Choice${idx}`}\n                                name={`question${questionIndex}`}\n                                value={val}\n                                disabled={!val}\n                                onInput={() => {\n                                    if (question.hasOpenChoice && idx === question.choices.length - 1) {\n                                        return setOpenChoiceSelected(!openChoiceSelected)\n                                    }\n                                    if (question.type === SurveyQuestionType.SingleChoice) {\n                                        return setSelectedChoices(val)\n                                    }\n                                    if (\n                                        question.type === SurveyQuestionType.MultipleChoice &&\n                                        _isArray(selectedChoices)\n                                    ) {\n                                        if (selectedChoices.includes(val)) {\n                                            // filter out values because clicking on a selected choice should deselect it\n                                            return setSelectedChoices(\n                                                selectedChoices.filter((choice) => choice !== val)\n                                            )\n                                        }\n                                        return setSelectedChoices([...selectedChoices, val])\n                                    }\n                                }}\n                            />\n                            <label htmlFor={`surveyQuestion${questionIndex}Choice${idx}`} style={{ color: 'black' }}>\n                                {question.hasOpenChoice && idx === question.choices.length - 1 ? (\n                                    <>\n                                        <span>{option}:</span>\n                                        <input\n                                            type=\"text\"\n                                            id={`surveyQuestion${questionIndex}Choice${idx}Open`}\n                                            name={`question${questionIndex}`}\n                                            onInput={(e) => {\n                                                const userValue = e.currentTarget.value\n                                                if (question.type === SurveyQuestionType.SingleChoice) {\n                                                    return setSelectedChoices(userValue)\n                                                }\n                                                if (\n                                                    question.type === SurveyQuestionType.MultipleChoice &&\n                                                    _isArray(selectedChoices)\n                                                ) {\n                                                    return setOpenEndedInput(userValue)\n                                                }\n                                            }}\n                                        />\n                                    </>\n                                ) : (\n                                    option\n                                )}\n                            </label>\n                            <span className=\"choice-check\" style={{ color: 'black' }}>\n                                {checkSVG}\n                            </span>\n                        </div>\n                    )\n                })}\n            </div>\n            <BottomSection\n                text={question.buttonText || 'Submit'}\n                submitDisabled={\n                    (_isNull(selectedChoices) ||\n                        (_isArray(selectedChoices) && !openChoiceSelected && selectedChoices.length === 0) ||\n                        (_isArray(selectedChoices) &&\n                            openChoiceSelected &&\n                            !openEndedInput &&\n                            selectedChoices.length === 0 &&\n                            !question.optional)) &&\n                    !question.optional\n                }\n                appearance={appearance}\n                onSubmit={() => {\n                    if (openChoiceSelected && question.type === SurveyQuestionType.MultipleChoice) {\n                        if (_isArray(selectedChoices)) {\n                            onSubmit([...selectedChoices, openEndedInput])\n                        }\n                    } else {\n                        onSubmit(selectedChoices)\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nconst threeScaleEmojis = [dissatisfiedEmoji, neutralEmoji, satisfiedEmoji]\nconst fiveScaleEmojis = [veryDissatisfiedEmoji, dissatisfiedEmoji, neutralEmoji, satisfiedEmoji, verySatisfiedEmoji]\nconst fiveScaleNumbers = [1, 2, 3, 4, 5]\nconst tenScaleNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","import { PostHog } from '../posthog-core'\nimport {\n    BasicSurveyQuestion,\n    LinkSurveyQuestion,\n    MultipleSurveyQuestion,\n    RatingSurveyQuestion,\n    Survey,\n    SurveyAppearance,\n    SurveyQuestion,\n    SurveyQuestionType,\n    SurveyType,\n} from '../posthog-surveys-types'\n\nimport { window as _window, document as _document } from '../utils/globals'\nimport {\n    style,\n    defaultSurveyAppearance,\n    sendSurveyEvent,\n    createShadow,\n    getContrastingTextColor,\n    SurveyContext,\n} from './surveys/surveys-utils'\nimport * as Preact from 'preact'\nimport { render } from 'preact-render-to-string'\nimport { createWidgetShadow, createWidgetStyle } from './surveys-widget'\nimport { useState, useEffect, useRef, useContext } from 'preact/hooks'\nimport { _isNumber } from '../utils/type-utils'\nimport { ConfirmationMessage } from './surveys/components/ConfirmationMessage'\nimport {\n    OpenTextQuestion,\n    LinkQuestion,\n    RatingQuestion,\n    MultipleChoiceQuestion,\n} from './surveys/components/QuestionTypes'\n\n// We cast the types here which is dangerous but protected by the top level generateSurveys call\nconst window = _window as Window & typeof globalThis\nconst document = _document as Document\n\nconst handleWidget = (posthog: PostHog, survey: Survey) => {\n    const shadow = createWidgetShadow(survey)\n    const surveyStyleSheet = style(survey.appearance)\n    shadow.appendChild(Object.assign(document.createElement('style'), { innerText: surveyStyleSheet }))\n    Preact.render(<FeedbackWidget key={'feedback-survey'} posthog={posthog} survey={survey} />, shadow)\n}\n\nexport const callSurveys = (posthog: PostHog, forceReload: boolean = false) => {\n    posthog?.getActiveMatchingSurveys((surveys) => {\n        const nonAPISurveys = surveys.filter((survey) => survey.type !== 'api')\n        nonAPISurveys.forEach((survey) => {\n            if (survey.type === SurveyType.Widget) {\n                if (\n                    survey.appearance?.widgetType === 'tab' &&\n                    document.querySelectorAll(`.PostHogWidget${survey.id}`).length === 0\n                ) {\n                    handleWidget(posthog, survey)\n                }\n                if (survey.appearance?.widgetType === 'selector' && survey.appearance?.widgetSelector) {\n                    const selectorOnPage = document.querySelector(survey.appearance.widgetSelector)\n                    if (selectorOnPage) {\n                        if (document.querySelectorAll(`.PostHogWidget${survey.id}`).length === 0) {\n                            handleWidget(posthog, survey)\n                        } else if (document.querySelectorAll(`.PostHogWidget${survey.id}`).length === 1) {\n                            // we have to check if user selector already has a survey listener attached to it because we always have to check if it's on the page or not\n                            if (!selectorOnPage.getAttribute('PHWidgetSurveyClickListener')) {\n                                const surveyPopup = document\n                                    .querySelector(`.PostHogWidget${survey.id}`)\n                                    ?.shadowRoot?.querySelector(`.survey-form`) as HTMLFormElement\n                                selectorOnPage.addEventListener('click', () => {\n                                    if (surveyPopup) {\n                                        surveyPopup.style.display =\n                                            surveyPopup.style.display === 'none' ? 'block' : 'none'\n                                        surveyPopup.addEventListener(\n                                            'PHSurveyClosed',\n                                            () => (surveyPopup.style.display = 'none')\n                                        )\n                                    }\n                                })\n                                selectorOnPage.setAttribute('PHWidgetSurveyClickListener', 'true')\n                            }\n                        }\n                    }\n                }\n            }\n            if (\n                survey.type === SurveyType.Popover &&\n                document.querySelectorAll(\"div[class^='PostHogSurvey']\").length === 0\n            ) {\n                const surveyWaitPeriodInDays = survey.conditions?.seenSurveyWaitPeriodInDays\n                const lastSeenSurveyDate = localStorage.getItem(`lastSeenSurveyDate`)\n                if (surveyWaitPeriodInDays && lastSeenSurveyDate) {\n                    const today = new Date()\n                    const diff = Math.abs(today.getTime() - new Date(lastSeenSurveyDate).getTime())\n                    const diffDaysFromToday = Math.ceil(diff / (1000 * 3600 * 24))\n                    if (diffDaysFromToday < surveyWaitPeriodInDays) {\n                        return\n                    }\n                }\n\n                if (!localStorage.getItem(`seenSurvey_${survey.id}`)) {\n                    const shadow = createShadow(style(survey?.appearance), survey.id)\n                    Preact.render(<Surveys key={'popover-survey'} posthog={posthog} survey={survey} />, shadow)\n                }\n            }\n        })\n    }, forceReload)\n}\n\nexport const renderSurveysPreview = (\n    survey: Survey,\n    root: HTMLElement,\n    displayState: 'survey' | 'confirmation',\n    previewQuestionIndex: number\n) => {\n    const surveyStyleSheet = style(survey.appearance)\n    const styleElement = Object.assign(document.createElement('style'), { innerText: surveyStyleSheet })\n    root.appendChild(styleElement)\n    const textColor = getContrastingTextColor(\n        survey.appearance?.backgroundColor || defaultSurveyAppearance.backgroundColor || 'white'\n    )\n    const surveyHtml = render(\n        <Surveys\n            key={'surveys-render-preview'}\n            survey={survey}\n            readOnly={true}\n            initialDisplayState={displayState}\n            previewQuestionIndex={previewQuestionIndex}\n            style={{\n                position: 'relative',\n                right: 0,\n                borderBottom: `1px solid ${survey.appearance?.borderColor}`,\n                borderRadius: 10,\n                color: textColor,\n            }}\n        />\n    )\n    const surveyDiv = document.createElement('div')\n    surveyDiv.innerHTML = surveyHtml\n    root.appendChild(surveyDiv)\n}\n\nexport const renderFeedbackWidgetPreview = (survey: Survey, root: HTMLElement) => {\n    const widgetStyleSheet = createWidgetStyle(survey.appearance?.widgetColor)\n    const styleElement = Object.assign(document.createElement('style'), { innerText: widgetStyleSheet })\n    root.appendChild(styleElement)\n    const widgetHtml = render(<FeedbackWidget key={'feedback-render-preview'} survey={survey} readOnly={true} />)\n    const widgetDiv = document.createElement('div')\n    widgetDiv.innerHTML = widgetHtml\n    root.appendChild(widgetDiv)\n}\n\n// This is the main exported function\nexport function generateSurveys(posthog: PostHog) {\n    // NOTE: Important to ensure we never try and run surveys without a window environment\n    if (!document || !window) {\n        return\n    }\n    callSurveys(posthog, true)\n\n    // recalculate surveys every 3 seconds to check if URL or selectors have changed\n    setInterval(() => {\n        callSurveys(posthog, false)\n    }, 3000)\n}\n\nexport function Surveys({\n    survey,\n    posthog,\n    readOnly,\n    style,\n    initialDisplayState,\n    previewQuestionIndex,\n}: {\n    survey: Survey\n    posthog?: PostHog\n    readOnly?: boolean\n    style?: React.CSSProperties\n    initialDisplayState?: 'survey' | 'confirmation' | 'closed'\n    previewQuestionIndex?: number\n}) {\n    const [displayState, setDisplayState] = useState<'survey' | 'confirmation' | 'closed'>(\n        initialDisplayState || 'survey'\n    )\n\n    useEffect(() => {\n        if (readOnly || !posthog) {\n            return\n        }\n\n        window.dispatchEvent(new Event('PHSurveyShown'))\n\n        posthog.capture('survey shown', {\n            $survey_name: survey.name,\n            $survey_id: survey.id,\n            sessionRecordingUrl: posthog.get_session_replay_url?.(),\n        })\n        localStorage.setItem(`lastSeenSurveyDate`, new Date().toISOString())\n\n        window.addEventListener('PHSurveyClosed', () => {\n            setDisplayState('closed')\n        })\n\n        window.addEventListener('PHSurveySent', () => {\n            if (!survey.appearance?.displayThankYouMessage) {\n                return setDisplayState('closed')\n            }\n            setDisplayState('confirmation')\n            if (survey.appearance?.autoDisappear) {\n                setTimeout(() => {\n                    setDisplayState('closed')\n                }, 5000)\n            }\n        })\n    }, [])\n    const confirmationBoxLeftStyle = style?.left && _isNumber(style?.left) ? { left: style.left - 40 } : {}\n\n    return (\n        <>\n            <SurveyContext.Provider\n                value={{\n                    readOnly: !!readOnly,\n                    previewQuestionIndex: previewQuestionIndex ?? 0,\n                    textColor: getContrastingTextColor(\n                        survey.appearance?.backgroundColor || defaultSurveyAppearance.backgroundColor\n                    ),\n                }}\n            >\n                {displayState === 'survey' && <Questions survey={survey} posthog={posthog} styleOverrides={style} />}\n                {displayState === 'confirmation' && (\n                    <ConfirmationMessage\n                        confirmationHeader={survey.appearance?.thankYouMessageHeader || 'Thank you!'}\n                        confirmationDescription={survey.appearance?.thankYouMessageDescription || ''}\n                        appearance={survey.appearance || defaultSurveyAppearance}\n                        styleOverrides={{ ...style, ...confirmationBoxLeftStyle }}\n                        onClose={() => setDisplayState('closed')}\n                    />\n                )}\n            </SurveyContext.Provider>\n        </>\n    )\n}\n\nconst questionTypeMap = (\n    question: SurveyQuestion,\n    questionIndex: number,\n    appearance: SurveyAppearance,\n    onSubmit: (res: string | string[] | number | null) => void,\n    closeSurveyPopup: () => void\n): JSX.Element => {\n    const mapping = {\n        [SurveyQuestionType.Open]: (\n            <OpenTextQuestion\n                question={question as BasicSurveyQuestion}\n                appearance={appearance}\n                onSubmit={onSubmit}\n                closeSurveyPopup={closeSurveyPopup}\n            />\n        ),\n        [SurveyQuestionType.Link]: (\n            <LinkQuestion\n                question={question as LinkSurveyQuestion}\n                appearance={appearance}\n                onSubmit={onSubmit}\n                closeSurveyPopup={closeSurveyPopup}\n            />\n        ),\n        [SurveyQuestionType.Rating]: (\n            <RatingQuestion\n                question={question as RatingSurveyQuestion}\n                appearance={appearance}\n                questionIndex={questionIndex}\n                onSubmit={onSubmit}\n                closeSurveyPopup={closeSurveyPopup}\n            />\n        ),\n        [SurveyQuestionType.SingleChoice]: (\n            <MultipleChoiceQuestion\n                question={question as MultipleSurveyQuestion}\n                appearance={appearance}\n                questionIndex={questionIndex}\n                onSubmit={onSubmit}\n                closeSurveyPopup={closeSurveyPopup}\n            />\n        ),\n        [SurveyQuestionType.MultipleChoice]: (\n            <MultipleChoiceQuestion\n                question={question as MultipleSurveyQuestion}\n                appearance={appearance}\n                questionIndex={questionIndex}\n                onSubmit={onSubmit}\n                closeSurveyPopup={closeSurveyPopup}\n            />\n        ),\n    }\n    return mapping[question.type]\n}\n\nexport function Questions({\n    survey,\n    posthog,\n    styleOverrides,\n}: {\n    survey: Survey\n    posthog?: PostHog\n    styleOverrides?: React.CSSProperties\n}) {\n    const textColor = getContrastingTextColor(\n        survey.appearance?.backgroundColor || defaultSurveyAppearance.backgroundColor\n    )\n    const [questionsResponses, setQuestionsResponses] = useState({})\n    const { readOnly, previewQuestionIndex } = useContext(SurveyContext)\n    const [currentQuestion, setCurrentQuestion] = useState(readOnly ? previewQuestionIndex : 0)\n\n    const onNextClick = (res: string | string[] | number | null, idx: number) => {\n        const responseKey = idx === 0 ? `$survey_response` : `$survey_response_${idx}`\n        if (idx === survey.questions.length - 1) {\n            return sendSurveyEvent({ ...questionsResponses, [responseKey]: res }, survey, posthog)\n        } else {\n            setQuestionsResponses({ ...questionsResponses, [responseKey]: res })\n            setCurrentQuestion(idx + 1)\n        }\n    }\n    const isMultipleQuestion = survey.questions.length > 1\n\n    return (\n        <form\n            // TODO: BEMify classes\n            className=\"survey-form\"\n            style={{ color: textColor, borderColor: survey.appearance?.borderColor, ...styleOverrides }}\n        >\n            {survey.questions.map((question, idx) => {\n                if (isMultipleQuestion) {\n                    return (\n                        <>\n                            {currentQuestion === idx && (\n                                <div className={`tab question-${idx} ${question.type}`}>\n                                    {questionTypeMap(\n                                        question,\n                                        idx,\n                                        survey.appearance || defaultSurveyAppearance,\n                                        (res) => onNextClick(res, idx),\n                                        () => closeSurveyPopup(survey, posthog, readOnly)\n                                    )}\n                                </div>\n                            )}\n                        </>\n                    )\n                }\n                return questionTypeMap(\n                    survey.questions[idx],\n                    idx,\n                    survey.appearance || defaultSurveyAppearance,\n                    (res) => onNextClick(res, idx),\n                    () => closeSurveyPopup(survey, posthog, readOnly)\n                )\n            })}\n        </form>\n    )\n}\n\nconst closeSurveyPopup = (survey: Survey, posthog?: PostHog, readOnly?: boolean) => {\n    // TODO: state management and unit tests for this would be nice\n    if (readOnly || !posthog) {\n        return\n    }\n    posthog.capture('survey dismissed', {\n        $survey_name: survey.name,\n        $survey_id: survey.id,\n        sessionRecordingUrl: posthog.get_session_replay_url?.(),\n        $set: {\n            [`$survey_dismissed/${survey.id}`]: true,\n        },\n    })\n    localStorage.setItem(`seenSurvey_${survey.id}`, 'true')\n    window.dispatchEvent(new Event('PHSurveyClosed'))\n}\n\nexport function FeedbackWidget({\n    survey,\n    posthog,\n    readOnly,\n}: {\n    survey: Survey\n    posthog?: PostHog\n    readOnly?: boolean\n}): JSX.Element {\n    const [showSurvey, setShowSurvey] = useState(false)\n    const [styleOverrides, setStyle] = useState({})\n    const widgetRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (readOnly || !posthog) {\n            return\n        }\n\n        if (survey.appearance?.widgetType === 'tab') {\n            if (widgetRef.current) {\n                const widgetPos = widgetRef.current.getBoundingClientRect()\n                const style = {\n                    top: '50%',\n                    left: parseInt(`${widgetPos.right - 360}`),\n                    bottom: 'auto',\n                    borderRadius: 10,\n                    borderBottom: `1.5px solid ${survey.appearance?.borderColor || '#c9c6c6'}`,\n                }\n                setStyle(style)\n            }\n        }\n        if (survey.appearance?.widgetType === 'selector') {\n            const widget = document.querySelector(survey.appearance.widgetSelector || '')\n            widget?.addEventListener('click', () => {\n                setShowSurvey(!showSurvey)\n            })\n            widget?.setAttribute('PHWidgetSurveyClickListener', 'true')\n        }\n    }, [])\n\n    return (\n        <>\n            {survey.appearance?.widgetType === 'tab' && (\n                <div\n                    className=\"ph-survey-widget-tab\"\n                    ref={widgetRef}\n                    onClick={() => !readOnly && setShowSurvey(!showSurvey)}\n                    style={{ color: getContrastingTextColor(survey.appearance.widgetColor) }}\n                >\n                    <div className=\"ph-survey-widget-tab-icon\"></div>\n                    {survey.appearance?.widgetLabel || ''}\n                </div>\n            )}\n            {showSurvey && (\n                <Surveys key={'feedback-widget-survey'} posthog={posthog} survey={survey} style={styleOverrides} />\n            )}\n        </>\n    )\n}\n","import { Survey } from '../posthog-surveys-types'\nimport { document as _document } from '../utils/globals'\n\n// We cast the types here which is dangerous but protected by the top level generateSurveys call\nconst document = _document as Document\n\nexport function createWidgetShadow(survey: Survey) {\n    const div = document.createElement('div')\n    div.className = `PostHogWidget${survey.id}`\n    const shadow = div.attachShadow({ mode: 'open' })\n    const widgetStyleSheet = createWidgetStyle(survey.appearance?.widgetColor)\n    shadow.append(Object.assign(document.createElement('style'), { innerText: widgetStyleSheet }))\n    document.body.appendChild(div)\n    return shadow\n}\n\nexport function createWidgetStyle(widgetColor?: string) {\n    return `\n        .ph-survey-widget-tab {\n            position: fixed;\n            top: 50%;\n            right: 0;\n            background: ${widgetColor || '#e0a045'};\n            color: white;\n            transform: rotate(-90deg) translate(0, -100%);\n            transform-origin: right top;\n            min-width: 40px;\n            padding: 8px 12px;\n            font-weight: 500;\n            border-radius: 3px 3px 0 0;\n            text-align: center;\n            cursor: pointer;\n            z-index: 9999999;\n        }\n        .ph-survey-widget-tab:hover {\n            padding-bottom: 13px;\n        }\n        .ph-survey-widget-button {\n            position: fixed;\n        }\n    `\n}\n"],"names":["SurveyType","SurveyQuestionType","win","window","undefined","global","globalThis","navigator","document","location","fetch","XMLHttpRequest","AbortController","userAgent","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","__u","_window","hex2rgb","c","hexColor","replace","parseInt","slice","getContrastingTextColor","rgb","color","arguments","length","defaultBackgroundColor","startsWith","nameColorToHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","colorMatch","match","r","g","b","Math","sqrt","defaultSurveyAppearance","backgroundColor","submitButtonColor","ratingButtonColor","ratingButtonActiveColor","borderColor","placeholder","whiteLabel","displayThankYouMessage","thankYouMessageHeader","position","sendSurveyEvent","_posthog$get_session_","responses","survey","posthog","localStorage","setItem","concat","id","capture","_objectSpread","$survey_name","name","$survey_id","$survey_questions","questions","map","question","sessionRecordingUrl","get_session_replay_url","call","$set","_defineProperty","dispatchEvent","Event","SurveyContext","createContext","readOnly","previewQuestionIndex","textColor","UNSAFE_NAME","NAMESPACE_REPLACE_REGEX","HTML_LOWER_CASE","SVG_CAMEL_CASE","ENCODED_ENTITIES","encodeEntities","str","test","last","i","out","ch","charCodeAt","JS_TO_CSS","Set","CSS_REGEX","styleObjToCss","s","prop","val","suffix","has","currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","EMPTY","oldBeforeDiff","options","__b","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","__c","oldBeforeUnmount","unmount","getHookState","index","type","__h","hooks","__H","__","push","__V","useState","initialState","useReducer","reducer","init","hookState","_reducer","invokeOrReturn","n","currentValue","__N","nextValue","action","setState","_hasScuFromHooks","updateHookState","f","p","stateHooks","filter","x","every","prevScu","this","shouldUpdate","forEach","hookItem","props","shouldComponentUpdate","prevCWU","componentWillUpdate","__e","tmp","useEffect","callback","args","state","__s","argsChanged","_pendingArgs","useRef","initialValue","factory","useMemo","current","useContext","context","provider","sub","value","flushAfterPaintEffects","component","shift","__P","invokeCleanup","invokeEffect","e","__v","vnode","t","requestAnimationFrame","afterNextFrame","commitQueue","some","cb","hasErrored","HAS_RAF","raf","done","clearTimeout","timeout","cancelAnimationFrame","setTimeout","hook","comp","cleanup","oldArgs","newArgs","arg","nativeIsArray","Array","isArray","toString","Object","prototype","_isArray","obj","_isNull","_isNumber","satisfiedEmoji","_jsx","className","xmlns","height","viewBox","width","children","d","neutralEmoji","dissatisfiedEmoji","veryDissatisfiedEmoji","verySatisfiedEmoji","cancelSVG","fill","IconPosthogLogo","_jsxs","style","maskType","maskUnits","y","mask","transform","checkSVG","PostHogLogo","_ref","href","target","rel","BottomSection","text","submitDisabled","appearance","onSubmit","link","disabled","onClick","open","QuestionHeader","description","dangerouslySetInnerHTML","__html","Cancel","_ref2","ConfirmationMessage","confirmationHeader","confirmationDescription","onClose","styleOverrides","_Fragment","useContrastingTextColor","_options$defaultTextC","ref","_useState2","_slicedToArray","defaultTextColor","setTextColor","el","getComputedStyle","getTextColor","forceUpdate","OpenTextQuestion","closeSurveyPopup","textRef","setText","rows","onInput","currentTarget","buttonText","optional","LinkQuestion","RatingQuestion","_ref3","questionIndex","scale","starting","_useState4","rating","setRating","display","threeScaleEmojis","fiveScaleEmojis","emoji","idx","active","gridTemplateColumns","fiveScaleNumbers","tenScaleNumbers","number","RatingButton","num","setActiveNumber","lowerBoundLabel","upperBoundLabel","submitButtonText","_ref4","_useContrastingTextCo","MultipleChoiceQuestion","_ref5","_useState6","MultipleChoice","selectedChoices","setSelectedChoices","_useState8","openChoiceSelected","setOpenChoiceSelected","_useState10","openEndedInput","setOpenEndedInput","inputType","SingleChoice","choices","choice","choiceClass","option","hasOpenChoice","includes","_toConsumableArray","htmlFor","userValue","_document","renderSurveysPreview","root","displayState","_survey$appearance4","_survey$appearance5","positions","surveyStyleSheet","left","right","center","maxWidth","zIndex","styleElement","assign","createElement","innerText","appendChild","surveyHtml","render","Surveys","initialDisplayState","borderBottom","borderRadius","surveyDiv","innerHTML","renderFeedbackWidgetPreview","_survey$appearance6","widgetColor","widgetStyleSheet","widgetHtml","FeedbackWidget","widgetDiv","_survey$appearance9","_survey$appearance10","_survey$appearance11","setDisplayState","Date","toISOString","addEventListener","_survey$appearance7","_survey$appearance8","autoDisappear","confirmationBoxLeftStyle","Provider","Questions","thankYouMessageDescription","questionTypeMap","_mapping","Open","Link","Rating","_survey$appearance12","_survey$appearance13","questionsResponses","setQuestionsResponses","_useContext","currentQuestion","setCurrentQuestion","onNextClick","res","responseKey","isMultipleQuestion","_posthog$get_session_2","_survey$appearance17","_survey$appearance18","showSurvey","setShowSurvey","setStyle","widgetRef","_survey$appearance14","_survey$appearance16","widgetType","_survey$appearance15","widgetPos","getBoundingClientRect","top","bottom","widget","querySelector","widgetSelector","setAttribute","widgetLabel"],"mappings":"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","x_google_ignoreList":[2,4,5]}