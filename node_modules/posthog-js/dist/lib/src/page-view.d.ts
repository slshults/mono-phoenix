import { PostHog } from './posthog-core';
interface PageViewData {
    pathname: string;
    maxScrollHeight?: number;
    maxScrollY?: number;
    lastScrollY?: number;
    maxContentHeight?: number;
    maxContentY?: number;
    lastContentY?: number;
}
interface ScrollProperties {
    $prev_pageview_last_scroll?: number;
    $prev_pageview_last_scroll_percentage?: number;
    $prev_pageview_max_scroll?: number;
    $prev_pageview_max_scroll_percentage?: number;
    $prev_pageview_last_content?: number;
    $prev_pageview_last_content_percentage?: number;
    $prev_pageview_max_content?: number;
    $prev_pageview_max_content_percentage?: number;
}
interface PageViewEventProperties extends ScrollProperties {
    $prev_pageview_pathname?: string;
}
export declare class PageViewManager {
    _pageViewData: PageViewData | undefined;
    _hasSeenPageView: boolean;
    _instance: PostHog;
    constructor(instance: PostHog);
    _createPageViewData(): PageViewData;
    doPageView(): PageViewEventProperties;
    doPageLeave(): PageViewEventProperties;
    _calculatePrevPageScrollProperties(prevPageViewData: PageViewData | undefined): ScrollProperties;
    _updateScrollData: () => void;
    startMeasuringScrollPosition(): void;
    stopMeasuringScrollPosition(): void;
    _scrollElement(): Element | null | undefined;
    _scrollHeight(): number;
    _scrollY(): number;
    _contentHeight(): number;
    _contentY(): number;
}
export {};
