{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/extensions/exception-autocapture/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { window } from '../../utils/globals'\nimport { PostHog } from '../../posthog-core'\nimport { DecideResponse, Properties } from '../../types'\nimport { ErrorEventArgs, ErrorProperties, errorToProperties, unhandledRejectionToProperties } from './error-conversion'\nimport { isPrimitive } from './type-checking'\n\nimport { _isArray, _isObject, _isUndefined } from '../../utils/type-utils'\nimport { logger } from '../../utils/logger'\n\nexport const extendPostHog = (instance: PostHog, response: DecideResponse) => {\n    const exceptionObserver = new ExceptionObserver(instance)\n    exceptionObserver.afterDecideResponse(response)\n    return exceptionObserver\n}\n\nexport class ExceptionObserver {\n    instance: PostHog\n    remoteEnabled: boolean | undefined\n    private originalOnErrorHandler: Window['onerror'] | null | undefined = undefined\n    private originalOnUnhandledRejectionHandler: Window['onunhandledrejection'] | null | undefined = undefined\n\n    private errorsToIgnore: RegExp[] = []\n\n    constructor(instance: PostHog) {\n        this.instance = instance\n    }\n\n    startCapturing() {\n        if (!window || !this.isEnabled() || (window.onerror as any)?.__POSTHOG_INSTRUMENTED__) {\n            return\n        }\n\n        try {\n            this.originalOnErrorHandler = window.onerror\n\n            window.onerror = function (this: ExceptionObserver, ...args: ErrorEventArgs): boolean {\n                this.captureException(args)\n\n                if (this.originalOnErrorHandler) {\n                    // eslint-disable-next-line prefer-rest-params\n                    return this.originalOnErrorHandler.apply(this, args)\n                }\n\n                return false\n            }.bind(this)\n            ;(window.onerror as any).__POSTHOG_INSTRUMENTED__ = true\n\n            this.originalOnUnhandledRejectionHandler = window.onunhandledrejection\n\n            window.onunhandledrejection = function (\n                this: ExceptionObserver,\n                ...args: [ev: PromiseRejectionEvent]\n            ): boolean {\n                const errorProperties: ErrorProperties = unhandledRejectionToProperties(args)\n                this.sendExceptionEvent(errorProperties)\n\n                if (window && this.originalOnUnhandledRejectionHandler) {\n                    // eslint-disable-next-line prefer-rest-params\n                    return this.originalOnUnhandledRejectionHandler.apply(window, args)\n                }\n\n                return true\n            }.bind(this)\n            ;(window.onunhandledrejection as any).__POSTHOG_INSTRUMENTED__ = true\n        } catch (e) {\n            logger.error('PostHog failed to start exception autocapture', e)\n            this.stopCapturing()\n        }\n    }\n\n    stopCapturing() {\n        if (!window) {\n            return\n        }\n        if (!_isUndefined(this.originalOnErrorHandler)) {\n            window.onerror = this.originalOnErrorHandler\n            this.originalOnErrorHandler = null\n        }\n        delete (window.onerror as any)?.__POSTHOG_INSTRUMENTED__\n\n        if (!_isUndefined(this.originalOnUnhandledRejectionHandler)) {\n            window.onunhandledrejection = this.originalOnUnhandledRejectionHandler\n            this.originalOnUnhandledRejectionHandler = null\n        }\n        delete (window.onunhandledrejection as any)?.__POSTHOG_INSTRUMENTED__\n    }\n\n    isCapturing() {\n        return !!(window?.onerror as any)?.__POSTHOG_INSTRUMENTED__\n    }\n\n    isEnabled() {\n        return this.remoteEnabled ?? false\n    }\n\n    afterDecideResponse(response: DecideResponse) {\n        const autocaptureExceptionsResponse = response.autocaptureExceptions\n        this.remoteEnabled = !!autocaptureExceptionsResponse || false\n        if (\n            !isPrimitive(autocaptureExceptionsResponse) &&\n            'errors_to_ignore' in autocaptureExceptionsResponse &&\n            _isArray(autocaptureExceptionsResponse.errors_to_ignore)\n        ) {\n            const dropRules = autocaptureExceptionsResponse.errors_to_ignore\n\n            this.errorsToIgnore = dropRules.map((rule) => {\n                return new RegExp(rule)\n            })\n        }\n\n        if (this.isEnabled()) {\n            this.startCapturing()\n            logger.info(\n                '[Exception Capture] Remote config for exception autocapture is enabled, starting with config: ',\n                _isObject(autocaptureExceptionsResponse) ? autocaptureExceptionsResponse : {}\n            )\n        }\n    }\n\n    captureException(args: ErrorEventArgs, properties?: Properties) {\n        const errorProperties = errorToProperties(args)\n\n        if (this.errorsToIgnore.some((regex) => regex.test(errorProperties.$exception_message || ''))) {\n            logger.info('[Exception Capture] Ignoring exception based on remote config', errorProperties)\n            return\n        }\n\n        const propertiesToSend = { ...properties, ...errorProperties }\n\n        const posthogHost = this.instance.requestRouter.endpointFor('ui')\n        errorProperties.$exception_personURL = posthogHost + '/person/' + this.instance.get_distinct_id()\n\n        this.sendExceptionEvent(propertiesToSend)\n    }\n\n    /**\n     * :TRICKY: Make sure we batch these requests\n     */\n    sendExceptionEvent(properties: { [key: string]: any }) {\n        this.instance.capture('$exception', properties, {\n            _noTruncate: true,\n            _batchKey: 'exceptionEvent',\n        })\n    }\n}\n"]}