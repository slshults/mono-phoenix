{"version":3,"file":"event-utils.js","sourceRoot":"","sources":["../../../src/utils/event-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { _getQueryParam, convertToURL } from './request-utils'\nimport { _isNull } from './type-utils'\nimport { Properties } from '../types'\nimport Config from '../config'\nimport { _each, _extend, _strip_empty_properties, _timestamp } from './index'\nimport { assignableWindow, document, location, userAgent, window } from './globals'\nimport { detectBrowser, detectBrowserVersion, detectDevice, detectDeviceType, detectOS } from './user-agent-utils'\n\nconst URL_REGEX_PREFIX = 'https?://(.*)'\n\nexport const _info = {\n    campaignParams: function (customParams?: string[]): Record<string, any> {\n        // Should be kept in sync with https://github.com/PostHog/posthog/blob/master/plugin-server/src/utils/db/utils.ts#L60\n        const campaign_keywords = [\n            'utm_source',\n            'utm_medium',\n            'utm_campaign',\n            'utm_content',\n            'utm_term',\n            'gclid', // google ads\n            'gad_source', // google ads\n            'gclsrc', // google ads 360\n            'dclid', // google display ads\n            'gbraid', // google ads, web to app\n            'wbraid', // google ads, app to web\n            'fbclid', // facebook\n            'msclkid', // microsoft\n            'twclid', // twitter\n            'li_fat_id', // linkedin\n            'mc_cid', // mailchimp campaign id\n            'igshid', // instagram\n            'ttclid', // tiktok\n        ].concat(customParams || [])\n\n        const params: Record<string, any> = {}\n        _each(campaign_keywords, function (kwkey) {\n            const kw = document ? _getQueryParam(document.URL, kwkey) : ''\n            if (kw.length) {\n                params[kwkey] = kw\n            }\n        })\n\n        return params\n    },\n\n    searchEngine: function (): string | null {\n        const referrer = document?.referrer\n        if (!referrer) {\n            return null\n        } else {\n            if (referrer.search(URL_REGEX_PREFIX + 'google.([^/?]*)') === 0) {\n                return 'google'\n            } else if (referrer.search(URL_REGEX_PREFIX + 'bing.com') === 0) {\n                return 'bing'\n            } else if (referrer.search(URL_REGEX_PREFIX + 'yahoo.com') === 0) {\n                return 'yahoo'\n            } else if (referrer.search(URL_REGEX_PREFIX + 'duckduckgo.com') === 0) {\n                return 'duckduckgo'\n            } else {\n                return null\n            }\n        }\n    },\n\n    searchInfo: function (): Record<string, any> {\n        const search = _info.searchEngine(),\n            param = search != 'yahoo' ? 'q' : 'p',\n            ret: Record<string, any> = {}\n\n        if (!_isNull(search)) {\n            ret['$search_engine'] = search\n\n            const keyword = document ? _getQueryParam(document.referrer, param) : ''\n            if (keyword.length) {\n                ret['ph_keyword'] = keyword\n            }\n        }\n\n        return ret\n    },\n\n    /**\n     * This function detects which browser is running this script.\n     * The order of the checks are important since many user agents\n     * include keywords used in later checks.\n     */\n    browser: detectBrowser,\n\n    /**\n     * This function detects which browser version is running this script,\n     * parsing major and minor version (e.g., 42.1). User agent strings from:\n     * http://www.useragentstring.com/pages/useragentstring.php\n     *\n     * `navigator.vendor` is passed in and used to help with detecting certain browsers\n     * NB `navigator.vendor` is deprecated and not present in every browser\n     */\n    browserVersion: detectBrowserVersion,\n\n    browserLanguage: function (): string {\n        return (\n            navigator.language || // Any modern browser\n            (navigator as Record<string, any>).userLanguage // IE11\n        )\n    },\n\n    os: detectOS,\n\n    device: detectDevice,\n\n    deviceType: detectDeviceType,\n\n    referrer: function (): string {\n        return document?.referrer || '$direct'\n    },\n\n    referringDomain: function (): string {\n        if (!document?.referrer) {\n            return '$direct'\n        }\n        return convertToURL(document.referrer)?.host || '$direct'\n    },\n\n    properties: function (): Properties {\n        if (!userAgent) {\n            return {}\n        }\n        const [os_name, os_version] = _info.os(userAgent)\n        return _extend(\n            _strip_empty_properties({\n                $os: os_name,\n                $os_version: os_version,\n                $browser: _info.browser(userAgent, navigator.vendor, assignableWindow.opera),\n                $device: _info.device(userAgent),\n                $device_type: _info.deviceType(userAgent),\n            }),\n            {\n                $current_url: location?.href,\n                $host: location?.host,\n                $pathname: location?.pathname,\n                $raw_user_agent: userAgent.length > 1000 ? userAgent.substring(0, 997) + '...' : userAgent,\n                $browser_version: _info.browserVersion(userAgent, navigator.vendor, assignableWindow.opera),\n                $browser_language: _info.browserLanguage(),\n                $screen_height: window?.screen.height,\n                $screen_width: window?.screen.width,\n                $viewport_height: window?.innerHeight,\n                $viewport_width: window?.innerWidth,\n                $lib: 'web',\n                $lib_version: Config.LIB_VERSION,\n                $insert_id: Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10),\n                $time: _timestamp() / 1000, // epoch time in seconds\n            }\n        )\n    },\n\n    people_properties: function (): Properties {\n        if (!userAgent) {\n            return {}\n        }\n\n        const [os_name, os_version] = _info.os(userAgent)\n        return _extend(\n            _strip_empty_properties({\n                $os: os_name,\n                $os_version: os_version,\n                $browser: _info.browser(userAgent, navigator.vendor, assignableWindow.opera),\n            }),\n            {\n                $browser_version: _info.browserVersion(userAgent, navigator.vendor, assignableWindow.opera),\n            }\n        )\n    },\n}\n"]}