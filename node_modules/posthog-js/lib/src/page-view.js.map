{"version":3,"file":"page-view.js","sourceRoot":"","sources":["../../src/page-view.ts"],"names":[],"mappings":"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","sourcesContent":["import { window } from './utils/globals'\nimport { PostHog } from './posthog-core'\nimport { _isArray } from './utils/type-utils'\n\ninterface PageViewData {\n    pathname: string\n    // scroll is how far down the page the user has scrolled,\n    // content is how far down the page the user can view content\n    // (e.g. if the page is 1000 tall, but the user's screen is only 500 tall,\n    // and they don't scroll at all, then scroll is 0 and content is 500)\n    maxScrollHeight?: number\n    maxScrollY?: number\n    lastScrollY?: number\n    maxContentHeight?: number\n    maxContentY?: number\n    lastContentY?: number\n}\n\ninterface ScrollProperties {\n    $prev_pageview_last_scroll?: number\n    $prev_pageview_last_scroll_percentage?: number\n    $prev_pageview_max_scroll?: number\n    $prev_pageview_max_scroll_percentage?: number\n    $prev_pageview_last_content?: number\n    $prev_pageview_last_content_percentage?: number\n    $prev_pageview_max_content?: number\n    $prev_pageview_max_content_percentage?: number\n}\n\ninterface PageViewEventProperties extends ScrollProperties {\n    $prev_pageview_pathname?: string\n}\n\nexport class PageViewManager {\n    _pageViewData: PageViewData | undefined\n    _hasSeenPageView = false\n    _instance: PostHog\n\n    constructor(instance: PostHog) {\n        this._instance = instance\n    }\n\n    _createPageViewData(): PageViewData {\n        return {\n            pathname: window?.location.pathname ?? '',\n        }\n    }\n\n    doPageView(): PageViewEventProperties {\n        let prevPageViewData: PageViewData | undefined\n        // if there were events created before the first PageView, we would have created a\n        // pageViewData for them. If this happened, we don't want to create a new pageViewData\n        if (!this._hasSeenPageView) {\n            this._hasSeenPageView = true\n            prevPageViewData = undefined\n            if (!this._pageViewData) {\n                this._pageViewData = this._createPageViewData()\n            }\n        } else {\n            prevPageViewData = this._pageViewData\n            this._pageViewData = this._createPageViewData()\n        }\n\n        // update the scroll properties for the new page, but wait until the next tick\n        // of the event loop\n        setTimeout(this._updateScrollData, 0)\n\n        return {\n            $prev_pageview_pathname: prevPageViewData?.pathname,\n            ...this._calculatePrevPageScrollProperties(prevPageViewData),\n        }\n    }\n\n    doPageLeave(): PageViewEventProperties {\n        const prevPageViewData = this._pageViewData\n        return {\n            $prev_pageview_pathname: prevPageViewData?.pathname,\n            ...this._calculatePrevPageScrollProperties(prevPageViewData),\n        }\n    }\n\n    _calculatePrevPageScrollProperties(prevPageViewData: PageViewData | undefined): ScrollProperties {\n        if (\n            !prevPageViewData ||\n            prevPageViewData.maxScrollHeight == null ||\n            prevPageViewData.lastScrollY == null ||\n            prevPageViewData.maxScrollY == null ||\n            prevPageViewData.maxContentHeight == null ||\n            prevPageViewData.lastContentY == null ||\n            prevPageViewData.maxContentY == null\n        ) {\n            return {}\n        }\n\n        let { maxScrollHeight, lastScrollY, maxScrollY, maxContentHeight, lastContentY, maxContentY } = prevPageViewData\n\n        // Use ceil, so that e.g. scrolling 999.5px of a 1000px page is considered 100% scrolled\n        maxScrollHeight = Math.ceil(maxScrollHeight)\n        lastScrollY = Math.ceil(lastScrollY)\n        maxScrollY = Math.ceil(maxScrollY)\n        maxContentHeight = Math.ceil(maxContentHeight)\n        lastContentY = Math.ceil(lastContentY)\n        maxContentY = Math.ceil(maxContentY)\n\n        // if the maximum scroll height is near 0, then the percentage is 1\n        const lastScrollPercentage = maxScrollHeight <= 1 ? 1 : clamp(lastScrollY / maxScrollHeight, 0, 1)\n        const maxScrollPercentage = maxScrollHeight <= 1 ? 1 : clamp(maxScrollY / maxScrollHeight, 0, 1)\n        const lastContentPercentage = maxContentHeight <= 1 ? 1 : clamp(lastContentY / maxContentHeight, 0, 1)\n        const maxContentPercentage = maxContentHeight <= 1 ? 1 : clamp(maxContentY / maxContentHeight, 0, 1)\n\n        return {\n            $prev_pageview_last_scroll: lastScrollY,\n            $prev_pageview_last_scroll_percentage: lastScrollPercentage,\n            $prev_pageview_max_scroll: maxScrollY,\n            $prev_pageview_max_scroll_percentage: maxScrollPercentage,\n            $prev_pageview_last_content: lastContentY,\n            $prev_pageview_last_content_percentage: lastContentPercentage,\n            $prev_pageview_max_content: maxContentY,\n            $prev_pageview_max_content_percentage: maxContentPercentage,\n        }\n    }\n\n    _updateScrollData = () => {\n        if (!this._pageViewData) {\n            this._pageViewData = this._createPageViewData()\n        }\n        const pageViewData = this._pageViewData\n\n        const scrollY = this._scrollY()\n        const scrollHeight = this._scrollHeight()\n        const contentY = this._contentY()\n        const contentHeight = this._contentHeight()\n\n        pageViewData.lastScrollY = scrollY\n        pageViewData.maxScrollY = Math.max(scrollY, pageViewData.maxScrollY ?? 0)\n        pageViewData.maxScrollHeight = Math.max(scrollHeight, pageViewData.maxScrollHeight ?? 0)\n\n        pageViewData.lastContentY = contentY\n        pageViewData.maxContentY = Math.max(contentY, pageViewData.maxContentY ?? 0)\n        pageViewData.maxContentHeight = Math.max(contentHeight, pageViewData.maxContentHeight ?? 0)\n    }\n\n    startMeasuringScrollPosition() {\n        // setting the third argument to `true` means that we will receive scroll events for other scrollable elements\n        // on the page, not just the window\n        // see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture\n        window?.addEventListener('scroll', this._updateScrollData, true)\n        window?.addEventListener('scrollend', this._updateScrollData, true)\n        window?.addEventListener('resize', this._updateScrollData)\n    }\n\n    stopMeasuringScrollPosition() {\n        window?.removeEventListener('scroll', this._updateScrollData)\n        window?.removeEventListener('scrollend', this._updateScrollData)\n        window?.removeEventListener('resize', this._updateScrollData)\n    }\n\n    _scrollElement(): Element | null | undefined {\n        if (this._instance.config.scroll_root_selector) {\n            const selectors = _isArray(this._instance.config.scroll_root_selector)\n                ? this._instance.config.scroll_root_selector\n                : [this._instance.config.scroll_root_selector]\n            for (const selector of selectors) {\n                const element = window?.document.querySelector(selector)\n                if (element) {\n                    return element\n                }\n            }\n            return undefined\n        } else {\n            return window?.document.documentElement\n        }\n    }\n\n    _scrollHeight(): number {\n        const element = this._scrollElement()\n        return element ? Math.max(0, element.scrollHeight - element.clientHeight) : 0\n    }\n\n    _scrollY(): number {\n        if (this._instance.config.scroll_root_selector) {\n            const element = this._scrollElement()\n            return (element && element.scrollTop) || 0\n        } else {\n            return window ? window.scrollY || window.pageYOffset || window.document.documentElement.scrollTop || 0 : 0\n        }\n    }\n\n    _contentHeight(): number {\n        const element = this._scrollElement()\n        return element?.scrollHeight || 0\n    }\n\n    _contentY(): number {\n        const element = this._scrollElement()\n        const clientHeight = element?.clientHeight || 0\n        return this._scrollY() + clientHeight\n    }\n}\n\nfunction clamp(x: number, min: number, max: number) {\n    return Math.max(min, Math.min(x, max))\n}\n"]}